Node:5 -- Output file:output_node5.txt
----------------------------------------------------------------
------------- AOSProject3 at Node: 5 -------------------------
----------------------------------------------------------------
Node:5 -- HostName:dc37.utdallas.edu
Node:5 -- Canonical Host Name:dc37.utdallas.edu
Node:5 -- Reading Config file
Read - No. of Nodes:10
Read - Numbers of files in the file system : 20
Read - Number of operations executed per node : 5
Read - Mean delay between two consecutive operations (assume exponentially distributed): 10
Read - Fraction of read operations: 80
Read - Exponential Backoff Min: 16
Read - Exponential Backoff Max: 128
Node:5 -- Using Protocol:SCTP
Node:5 -- Started SCTP Server at Port:39717
Protocol used by Server:SCTP
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 8 To 5 | MyLogTS:1 PktLogTS:0 | MyVecTS:[0, 0, 0, 0, 0, 1, 0, 0, 0, 0] PktVecTS:[0, 0, 0, 0, 0, 0, 0, 0, 0, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 8 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- grant_write_lock(8) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(0) : From 5 To 8
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(0) : From 7 To 5 | MyLogTS:3 PktLogTS:0 | MyVecTS:[0, 0, 0, 0, 0, 3, 0, 0, 0, 0] PktVecTS:[0, 0, 0, 0, 0, 0, 0, 0, 0, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(0) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(0) : From 0 To 5 | MyLogTS:4 PktLogTS:1 | MyVecTS:[1, 0, 0, 0, 0, 4, 0, 0, 0, 0] PktVecTS:[1, 0, 0, 0, 0, 0, 0, 0, 0, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(0) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Request Number:0
Node:5 -- [Even] -- Read Operation
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- Semaphore released by :client,  Location:[Read] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- Semaphore released by :client,  Location:[Read] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- Semaphore released by :client,  Location:[Read] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- Semaphore released by :client,  Location:[Read] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- Semaphore released by :client,  Location:[Read] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- Semaphore released by :client,  Location:[Read] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- Semaphore released by :client,  Location:[Read] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- Semaphore released by :client,  Location:[Read] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- Semaphore released by :client,  Location:[Read] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- Semaphore released by :client,  Location:[Read] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- Semaphore released by :client,  Location:[Read] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- Semaphore released by :client,  Location:[Read] Unable to lock own copy
Node:5 -- Received - MSG_SEND_UPDATED_FILE(0) : From 8 To 5 | MyLogTS:13 PktLogTS:12 | MyVecTS:[1, 0, 2, 2, 2, 5, 2, 0, 11, 0] PktVecTS:[1, 0, 2, 2, 2, 2, 2, 0, 11, 0] 
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- Semaphore released by :client,  Location:[Read] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_SEND_UPDATED_FILE(0) : From 8 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- Received - MSG_RELEASE_WRITE_LOCK(0) : From 8 To 5 | MyLogTS:18 PktLogTS:17 | MyVecTS:[1, 0, 2, 2, 2, 6, 2, 0, 16, 0] PktVecTS:[1, 0, 2, 2, 2, 2, 2, 0, 16, 0] 
Node:5 -- Semaphore released by :client,  Location:[Read] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_WRITE_LOCK(0) : From 8 To 5
Node:5 -- C5 - WLF should be true, next operation false, rcv release write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C5 - WLF should be false, rcv release write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- [Read] -- Operation started
Node:5 -- Received - MSG_REQUEST_READ_LOCK(0) : From 7 To 5 | MyLogTS:19 PktLogTS:9 | MyVecTS:[8, 2, 2, 2, 2, 7, 2, 6, 16, 0] PktVecTS:[8, 2, 0, 0, 0, 0, 0, 6, 0, 0] 
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Read] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(0) : From 7 To 5
Node:5 -- grant_read_lock(7) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(0) : From 5 To 7
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(0) : From 3 To 5 | MyLogTS:21 PktLogTS:17 | MyVecTS:[8, 2, 2, 7, 2, 9, 2, 6, 16, 0] PktVecTS:[8, 2, 2, 7, 2, 2, 2, 6, 14, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(0) : From 3 To 5
Node:5 -- grant_read_lock(3) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(0) : From 5 To 3
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(0) : From 0 To 5 | MyLogTS:23 PktLogTS:18 | MyVecTS:[11, 2, 2, 7, 2, 11, 2, 6, 16, 0] PktVecTS:[11, 2, 2, 7, 2, 2, 2, 6, 14, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(0) : From 0 To 5
Node:5 -- grant_read_lock(0) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(0) : From 5 To 0
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(1) : From 8 To 5 | MyLogTS:25 PktLogTS:21 | MyVecTS:[11, 2, 2, 7, 2, 13, 2, 6, 20, 0] PktVecTS:[8, 2, 2, 7, 2, 2, 2, 6, 20, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(1) : From 8 To 5
Node:5 -- grant_read_lock(8) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(0) : From 5 To 8
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(0) : From 4 To 5 | MyLogTS:27 PktLogTS:18 | MyVecTS:[11, 2, 2, 7, 7, 15, 2, 6, 20, 0] PktVecTS:[8, 2, 2, 2, 7, 2, 2, 6, 15, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(0) : From 4 To 5
Node:5 -- grant_read_lock(4) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(0) : From 5 To 4
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(0) : From 0 To 5 | MyLogTS:29 PktLogTS:27 | MyVecTS:[20, 2, 2, 7, 7, 17, 7, 6, 20, 0] PktVecTS:[20, 2, 2, 7, 7, 7, 7, 6, 19, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(0) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 2 To 5 | MyLogTS:30 PktLogTS:16 | MyVecTS:[20, 2, 7, 7, 7, 18, 7, 6, 20, 0] PktVecTS:[8, 2, 7, 2, 2, 2, 2, 6, 13, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 2 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(0) : From 6 To 5 | MyLogTS:31 PktLogTS:20 | MyVecTS:[20, 2, 7, 7, 7, 19, 7, 6, 20, 0] PktVecTS:[8, 2, 2, 2, 2, 2, 7, 6, 17, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(0) : From 6 To 5
Node:5 -- grant_read_lock(6) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(0) : From 5 To 6
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(0) : From 3 To 5 | MyLogTS:33 PktLogTS:30 | MyVecTS:[20, 4, 7, 18, 7, 21, 7, 11, 20, 0] PktVecTS:[12, 4, 2, 18, 7, 7, 2, 11, 20, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(0) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(0) : From 7 To 5 | MyLogTS:34 PktLogTS:33 | MyVecTS:[20, 7, 7, 18, 7, 22, 7, 21, 20, 0] PktVecTS:[11, 7, 2, 8, 7, 7, 2, 21, 20, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(0) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(1) : From 8 To 5 | MyLogTS:35 PktLogTS:32 | MyVecTS:[20, 7, 7, 18, 7, 23, 7, 21, 30, 0] PktVecTS:[16, 7, 2, 14, 7, 7, 2, 17, 30, 0] 
Node:5 -- [Read] -- Timer over
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(1) : From 8 To 5
Node:5 -- send_read_deny_lock(8) called
Node:5 Sent -- MSG_DENY_READ_LOCK(0) : From 5 To 8
Node:5 -- Semaphore locked by :client, Location:[Read] Timer Off
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Read] -- P-Set:[0, 3, 5, 7] P-Set Size:4
Node:5 -- Received - MSG_GRANTED_READ_LOCK(0) : From 4 To 5 | MyLogTS:37 PktLogTS:28 | MyVecTS:[20, 7, 7, 18, 17, 25, 7, 21, 30, 0] PktVecTS:[14, 2, 2, 7, 17, 7, 2, 6, 20, 0] 
Node:5 -- [Read] -- Q-Set:[3, 5] Q-Set Size:2
Node:5 -- [Read] -- QSize:2.0, N:6.0, [N/2]:3.0
Node:5 -- [Read] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_read_lock() called
Node:5 Sent -- MSG_RELEASE_READ_LOCK(0) : From 5 To 0
Node:5 Sent -- MSG_RELEASE_READ_LOCK(0) : From 5 To 3
Node:5 Sent -- MSG_RELEASE_READ_LOCK(0) : From 5 To 7
Node:5 -- Semaphore released by :client,  Location:[Read] Exponential Backoff
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- exponential_backoff() called
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(0) : From 4 To 5
Node:5 -- [Read] -- Request NOT yet fulfilled
Node:5 -- send_read_deny_lock(4) called
Node:5 Sent -- MSG_DENY_READ_LOCK(0) : From 5 To 4
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- Received - MSG_GRANTED_READ_LOCK(0) : From 6 To 5 | MyLogTS:42 PktLogTS:32 | MyVecTS:[20, 7, 7, 18, 17, 30, 19, 21, 30, 0] PktVecTS:[18, 2, 2, 7, 7, 7, 19, 6, 20, 0] 
Node:5 -- [Read] -- Operation started
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Read] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(0) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_READ_LOCK(0) : From 3 To 5 | MyLogTS:48 PktLogTS:47 | MyVecTS:[29, 12, 7, 33, 17, 31, 19, 28, 30, 0] PktVecTS:[29, 12, 7, 33, 12, 12, 12, 28, 23, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(0) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(0) : From 1 To 5 | MyLogTS:49 PktLogTS:27 | MyVecTS:[29, 18, 7, 33, 17, 32, 19, 28, 30, 0] PktVecTS:[11, 18, 2, 7, 7, 7, 2, 6, 20, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(0) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_READ_LOCK(0) : From 7 To 5 | MyLogTS:56 PktLogTS:55 | MyVecTS:[29, 18, 7, 35, 17, 33, 19, 35, 30, 0] PktVecTS:[29, 12, 7, 35, 12, 12, 12, 35, 23, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(0) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_READ_LOCK(0) : From 0 To 5 | MyLogTS:63 PktLogTS:62 | MyVecTS:[37, 18, 7, 37, 17, 34, 19, 37, 30, 0] PktVecTS:[37, 12, 7, 37, 12, 12, 12, 37, 23, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(0) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_READ_LOCK(1) : From 8 To 5 | MyLogTS:64 PktLogTS:56 | MyVecTS:[37, 18, 7, 37, 17, 35, 19, 37, 43, 0] PktVecTS:[29, 14, 7, 36, 15, 14, 14, 28, 43, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(1) : From 8 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(1) : From 7 To 5 | MyLogTS:65 PktLogTS:58 | MyVecTS:[37, 18, 7, 37, 17, 36, 19, 38, 43, 0] PktVecTS:[29, 12, 7, 35, 17, 28, 12, 38, 30, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(1) : From 7 To 5
Node:5 -- grant_read_lock(7) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(0) : From 5 To 7
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 2 To 5 | MyLogTS:67 PktLogTS:59 | MyVecTS:[37, 18, 14, 37, 17, 38, 19, 38, 43, 0] PktVecTS:[29, 12, 14, 35, 17, 28, 12, 38, 30, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 2 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_READ_LOCK(0) : From 6 To 5 | MyLogTS:69 PktLogTS:68 | MyVecTS:[38, 18, 14, 37, 21, 39, 32, 38, 43, 0] PktVecTS:[38, 12, 7, 37, 21, 20, 32, 37, 33, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(0) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_DENY_READ_LOCK(0) : From 4 To 5 | MyLogTS:70 PktLogTS:44 | MyVecTS:[38, 18, 14, 37, 33, 40, 32, 38, 43, 0] PktVecTS:[18, 16, 7, 16, 33, 16, 17, 19, 27, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_READ_LOCK(0) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(1) : From 3 To 5 | MyLogTS:71 PktLogTS:67 | MyVecTS:[38, 18, 14, 46, 33, 41, 32, 38, 43, 0] PktVecTS:[35, 16, 7, 46, 29, 30, 19, 38, 41, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(1) : From 7 To 5 | MyLogTS:72 PktLogTS:70 | MyVecTS:[41, 18, 14, 46, 33, 42, 32, 45, 45, 0] PktVecTS:[41, 16, 7, 43, 31, 30, 19, 45, 45, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(1) : From 7 To 5
Node:5 -- [Read] -- Timer over
Node:5 -- send_read_deny_lock(7) called
Node:5 Sent -- MSG_DENY_READ_LOCK(0) : From 5 To 7
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Read] Timer Off
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 8 To 5 | MyLogTS:74 PktLogTS:60 | MyVecTS:[41, 18, 14, 46, 33, 44, 32, 45, 47, 0] PktVecTS:[29, 14, 7, 36, 15, 24, 14, 37, 47, 0] 
Node:5 -- [Read] -- P-Set:[1, 3, 5, 6] P-Set Size:4
Node:5 -- [Read] -- Q-Set:[3, 5, 6] Q-Set Size:3
Node:5 -- [Read] -- QSize:3.0, N:6.0, [N/2]:3.0
Node:5 -- [Read] -- Request NOT yet fulfilled
Node:5 -- Semaphore released by :client,  Location:[Read] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 8 To 5
Node:5 -- grant_read_lock(8) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(0) : From 5 To 8
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- Received - MSG_REQUEST_READ_LOCK(1) : From 0 To 5 | MyLogTS:76 PktLogTS:68 | MyVecTS:[43, 18, 14, 46, 33, 46, 32, 45, 47, 0] PktVecTS:[43, 14, 7, 37, 17, 26, 14, 37, 39, 0] 
Node:5 -- [Read] -- Operation started
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_READ_LOCK(0) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Read] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(1) : From 0 To 5
Node:5 -- grant_read_lock(0) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(0) : From 5 To 0
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(1) : From 6 To 5 | MyLogTS:78 PktLogTS:72 | MyVecTS:[43, 18, 14, 46, 33, 48, 36, 45, 47, 0] PktVecTS:[38, 14, 7, 37, 21, 28, 36, 38, 44, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(1) : From 6 To 5
Node:5 -- grant_read_lock(6) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(0) : From 5 To 6
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(1) : From 0 To 5 | MyLogTS:80 PktLogTS:71 | MyVecTS:[46, 18, 14, 46, 33, 50, 36, 45, 47, 0] PktVecTS:[46, 16, 7, 37, 27, 30, 19, 37, 39, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(1) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(2) : From 8 To 5 | MyLogTS:81 PktLogTS:71 | MyVecTS:[46, 18, 14, 46, 33, 51, 36, 45, 53, 0] PktVecTS:[40, 16, 7, 37, 32, 30, 19, 38, 53, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(2) : From 8 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(1) : From 4 To 5 | MyLogTS:82 PktLogTS:67 | MyVecTS:[46, 18, 14, 46, 42, 52, 36, 45, 53, 0] PktVecTS:[36, 16, 7, 37, 42, 30, 19, 38, 42, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(1) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(1) : From 7 To 5 | MyLogTS:83 PktLogTS:81 | MyVecTS:[46, 18, 14, 46, 42, 53, 36, 56, 53, 0] PktVecTS:[43, 18, 14, 43, 40, 37, 36, 56, 50, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(1) : From 7 To 5
Node:5 -- grant_read_lock(7) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(0) : From 5 To 7
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(1) : From 0 To 5 | MyLogTS:86 PktLogTS:85 | MyVecTS:[59, 18, 14, 52, 42, 55, 36, 56, 58, 0] PktVecTS:[59, 18, 14, 52, 40, 46, 36, 55, 58, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(1) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_READ_LOCK(2) : From 8 To 5 | MyLogTS:90 PktLogTS:89 | MyVecTS:[59, 18, 14, 52, 46, 56, 36, 56, 70, 0] PktVecTS:[50, 18, 14, 50, 46, 45, 36, 56, 70, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(2) : From 8 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(1) : From 0 To 5 | MyLogTS:91 PktLogTS:88 | MyVecTS:[62, 18, 19, 52, 48, 57, 36, 56, 70, 0] PktVecTS:[62, 18, 19, 52, 48, 46, 36, 56, 67, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(1) : From 0 To 5
Node:5 -- grant_read_lock(0) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(0) : From 5 To 0
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(1) : From 6 To 5 | MyLogTS:93 PktLogTS:76 | MyVecTS:[62, 18, 19, 52, 48, 59, 40, 56, 70, 0] PktVecTS:[38, 16, 7, 37, 30, 30, 40, 38, 44, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(1) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 2 To 5 | MyLogTS:94 PktLogTS:88 | MyVecTS:[62, 18, 20, 52, 48, 60, 40, 56, 70, 0] PktVecTS:[61, 18, 20, 52, 48, 46, 36, 55, 58, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 2 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Read] -- Timer over
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 8 To 5 | MyLogTS:95 PktLogTS:93 | MyVecTS:[62, 18, 20, 52, 48, 61, 40, 56, 74, 0] PktVecTS:[62, 18, 20, 52, 48, 46, 36, 56, 74, 0] 
Node:5 -- Semaphore locked by :client, Location:[Read] Timer Off
Node:5 -- [Read] -- P-Set:[1, 3, 5, 6, 0, 1, 3, 4, 5, 6, 8] P-Set Size:11
Node:5 -- [Read] -- Q-Set:[3, 5, 6, 3, 4, 5, 6, 8] Q-Set Size:8
Node:5 -- [Read] -- QSize:8.0, N:6.0, [N/2]:3.0
Node:5 -- [Read] -- Got Quorum - TEST1 - GT
Node:5 -- [Read] -- quorum_read_operations() called
Node:5 -- cs_read_enter() called
Node:5 - Lock file created!
Node:5 -- started reading #95#[62, 18, 20, 52, 48, 61, 40, 56, 74, 0]
Node:5 -- finished reading#95#[62, 18, 20, 52, 48, 61, 40, 56, 74, 0]
Node:5 - Lock file deleted!
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_read_lock() called
Node:5 Sent -- MSG_RELEASE_READ_LOCK(0) : From 5 To 0
Node:5 Sent -- MSG_RELEASE_READ_LOCK(0) : From 5 To 1
Node:5 Sent -- MSG_RELEASE_READ_LOCK(0) : From 5 To 3
Node:5 Sent -- MSG_RELEASE_READ_LOCK(0) : From 5 To 4
Node:5 Sent -- MSG_RELEASE_READ_LOCK(0) : From 5 To 6
Node:5 Sent -- MSG_RELEASE_READ_LOCK(0) : From 5 To 8
Node:5 -- [Read] -- Request fulfilled
Node:5 -- release_read_lock() called
Request Number:0 Fulfilled
Node:5 -- Semaphore released by :client,  Location:[Read] Request fulfilled
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 8 To 5
Node:5 -- grant_read_lock(8) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(0) : From 5 To 8
Request Number:1
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Odd] -- Write Operation
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_GRANTED_READ_LOCK(1) : From 3 To 5 | MyLogTS:103 PktLogTS:93 | MyVecTS:[62, 18, 20, 62, 48, 69, 40, 56, 74, 0] PktVecTS:[62, 18, 20, 62, 48, 46, 36, 56, 68, 0] 
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(1) : From 3 To 5
Node:5 -- send_read_deny_lock(3) called
Node:5 Sent -- MSG_DENY_READ_LOCK(1) : From 5 To 3
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_GRANTED_READ_LOCK(1) : From 7 To 5 | MyLogTS:105 PktLogTS:96 | MyVecTS:[62, 18, 20, 62, 48, 71, 40, 69, 74, 2] PktVecTS:[62, 18, 20, 56, 48, 46, 37, 69, 71, 2] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(1) : From 7 To 5
Node:5 -- send_read_deny_lock(7) called
Node:5 Sent -- MSG_DENY_READ_LOCK(1) : From 5 To 7
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Received - MSG_GRANTED_READ_LOCK(3) : From 8 To 5 | MyLogTS:107 PktLogTS:95 | MyVecTS:[62, 18, 20, 62, 48, 73, 40, 69, 76, 2] PktVecTS:[62, 18, 20, 52, 48, 46, 36, 56, 76, 0] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(3) : From 8 To 5
Node:5 -- send_read_deny_lock(8) called
Node:5 Sent -- MSG_DENY_READ_LOCK(1) : From 5 To 8
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_GRANTED_READ_LOCK(1) : From 4 To 5 | MyLogTS:109 PktLogTS:94 | MyVecTS:[62, 18, 20, 62, 59, 75, 40, 69, 76, 2] PktVecTS:[62, 18, 20, 52, 59, 46, 36, 56, 69, 0] 
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(1) : From 4 To 5
Node:5 -- send_read_deny_lock(4) called
Node:5 Sent -- MSG_DENY_READ_LOCK(1) : From 5 To 4
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_RELEASE_READ_LOCK(1) : From 7 To 5 | MyLogTS:111 PktLogTS:107 | MyVecTS:[62, 18, 20, 66, 59, 77, 40, 79, 76, 2] PktVecTS:[62, 18, 20, 66, 53, 54, 37, 79, 74, 2] 
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(1) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_DENY_READ_LOCK(1) : From 7 To 5 | MyLogTS:112 PktLogTS:111 | MyVecTS:[62, 18, 20, 66, 59, 78, 40, 83, 76, 2] PktVecTS:[62, 18, 20, 66, 53, 54, 37, 83, 74, 2] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_READ_LOCK(1) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Received - MSG_REQUEST_READ_LOCK(1) : From 6 To 5 | MyLogTS:113 PktLogTS:84 | MyVecTS:[62, 20, 20, 66, 59, 79, 48, 83, 76, 2] PktVecTS:[43, 20, 14, 54, 30, 30, 48, 38, 47, 0] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(1) : From 6 To 5
Node:5 -- grant_read_lock(6) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(1) : From 5 To 6
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_RELEASE_READ_LOCK(1) : From 0 To 5 | MyLogTS:119 PktLogTS:118 | MyVecTS:[81, 20, 20, 73, 59, 81, 48, 83, 76, 11] PktVecTS:[81, 20, 20, 73, 56, 58, 48, 78, 74, 11] 
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(1) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 2 To 5 | MyLogTS:120 PktLogTS:95 | MyVecTS:[81, 20, 23, 73, 59, 82, 48, 83, 76, 11] PktVecTS:[62, 20, 23, 54, 48, 46, 48, 56, 74, 0] 
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 2 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_READ_LOCK(4) : From 8 To 5 | MyLogTS:121 PktLogTS:118 | MyVecTS:[81, 20, 23, 73, 61, 83, 48, 83, 90, 11] PktVecTS:[66, 20, 20, 66, 61, 67, 48, 81, 90, 2] 
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(4) : From 8 To 5
Node:5 -- grant_read_lock(8) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(1) : From 5 To 8
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 0 To 5 | MyLogTS:126 PktLogTS:125 | MyVecTS:[88, 20, 23, 73, 61, 85, 48, 83, 90, 11] PktVecTS:[88, 20, 23, 73, 56, 62, 48, 78, 74, 11] 
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 0 To 5
Node:5 -- grant_read_lock(0) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(1) : From 5 To 0
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Received - MSG_GRANTED_READ_LOCK(1) : From 6 To 5 | MyLogTS:128 PktLogTS:100 | MyVecTS:[88, 20, 23, 73, 61, 87, 64, 83, 90, 11] PktVecTS:[62, 20, 20, 54, 50, 46, 64, 57, 67, 0] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(1) : From 6 To 5
Node:5 -- send_read_deny_lock(6) called
Node:5 Sent -- MSG_DENY_READ_LOCK(1) : From 5 To 6
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Received - MSG_DENY_READ_LOCK(2) : From 6 To 5 | MyLogTS:130 PktLogTS:104 | MyVecTS:[88, 20, 23, 73, 61, 89, 68, 83, 90, 11] PktVecTS:[62, 20, 20, 54, 50, 49, 68, 57, 74, 0] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_READ_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_RELEASE_READ_LOCK(4) : From 8 To 5 | MyLogTS:138 PktLogTS:137 | MyVecTS:[91, 20, 24, 79, 70, 90, 68, 94, 106, 11] PktVecTS:[91, 20, 24, 79, 70, 74, 66, 94, 106, 11] 
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(4) : From 8 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_DENY_READ_LOCK(4) : From 8 To 5 | MyLogTS:142 PktLogTS:141 | MyVecTS:[91, 20, 24, 79, 70, 91, 68, 94, 110, 11] PktVecTS:[91, 20, 24, 79, 70, 84, 66, 94, 110, 11] 
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_READ_LOCK(4) : From 8 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 2 To 5 | MyLogTS:143 PktLogTS:126 | MyVecTS:[91, 20, 25, 79, 70, 92, 68, 94, 110, 11] PktVecTS:[88, 20, 25, 73, 61, 62, 48, 81, 89, 11] 
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 2 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Received - MSG_DENY_READ_LOCK(2) : From 0 To 5 | MyLogTS:148 PktLogTS:147 | MyVecTS:[108, 25, 25, 86, 72, 93, 71, 98, 110, 11] PktVecTS:[108, 25, 24, 86, 72, 86, 71, 98, 104, 11] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_READ_LOCK(2) : From 0 To 5
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:149 PktLogTS:144 | MyVecTS:[108, 25, 25, 89, 72, 94, 73, 98, 110, 11] PktVecTS:[103, 25, 25, 89, 72, 86, 73, 98, 104, 11] 
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 7 To 5 | MyLogTS:150 PktLogTS:147 | MyVecTS:[108, 25, 25, 89, 72, 95, 79, 104, 110, 11] PktVecTS:[106, 25, 25, 86, 72, 86, 79, 104, 108, 11] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 0 To 5 | MyLogTS:151 PktLogTS:148 | MyVecTS:[109, 25, 25, 89, 72, 96, 79, 104, 110, 11] PktVecTS:[109, 25, 25, 86, 72, 86, 71, 98, 104, 11] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5 | MyLogTS:152 PktLogTS:145 | MyVecTS:[109, 25, 25, 89, 78, 97, 79, 104, 110, 11] PktVecTS:[104, 25, 25, 86, 78, 86, 75, 98, 105, 11] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:153 PktLogTS:124 | MyVecTS:[109, 25, 25, 89, 78, 98, 84, 104, 110, 11] PktVecTS:[82, 20, 23, 73, 64, 67, 84, 87, 90, 11] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(0) : From 1 To 5 | MyLogTS:154 PktLogTS:62 | MyVecTS:[109, 28, 25, 89, 78, 99, 84, 104, 110, 11] PktVecTS:[34, 28, 7, 37, 28, 28, 17, 38, 40, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(0) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:155 PktLogTS:153 | MyVecTS:[109, 28, 25, 95, 78, 100, 84, 104, 110, 11] PktVecTS:[109, 28, 25, 95, 78, 94, 84, 104, 110, 11] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:6.0, [N/2]:3.0
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 7 To 5 | MyLogTS:156 PktLogTS:154 | MyVecTS:[109, 28, 25, 95, 78, 101, 84, 110, 110, 11] PktVecTS:[109, 28, 25, 95, 78, 94, 84, 110, 110, 11] 
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- exponential_backoff() called
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 7 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- grant_write_lock(7) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(1) : From 5 To 7
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 0 To 5 | MyLogTS:158 PktLogTS:157 | MyVecTS:[118, 28, 25, 95, 78, 103, 84, 110, 110, 11] PktVecTS:[118, 28, 25, 95, 78, 94, 84, 110, 110, 11] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_GRANTED_READ_LOCK(0) : From 1 To 5 | MyLogTS:159 PktLogTS:64 | MyVecTS:[118, 30, 25, 95, 78, 104, 84, 110, 110, 11] PktVecTS:[34, 30, 7, 37, 28, 30, 19, 38, 40, 0] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(0) : From 1 To 5
Node:5 -- send_read_deny_lock(1) called
Node:5 Sent -- MSG_DENY_READ_LOCK(1) : From 5 To 1
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_GRANTED_READ_LOCK(0) : From 9 To 5 | MyLogTS:161 PktLogTS:27 | MyVecTS:[118, 30, 25, 95, 78, 106, 84, 110, 110, 17] PktVecTS:[11, 2, 2, 7, 7, 7, 2, 6, 20, 17] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(0) : From 9 To 5
Node:5 -- send_read_deny_lock(9) called
Node:5 Sent -- MSG_DENY_READ_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_RELEASE_WRITE_LOCK(2) : From 7 To 5 | MyLogTS:164 PktLogTS:163 | MyVecTS:[118, 30, 25, 95, 87, 108, 100, 117, 110, 17] PktVecTS:[118, 28, 25, 95, 87, 102, 100, 117, 110, 11] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_WRITE_LOCK(2) : From 7 To 5
Node:5 -- C5 - WLF should be true, next operation false, rcv release write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C5 - WLF should be false, rcv release write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:165 PktLogTS:164 | MyVecTS:[118, 30, 36, 101, 87, 109, 100, 117, 123, 17] PktVecTS:[118, 28, 36, 101, 78, 94, 84, 110, 123, 11] 
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 2 To 5 | MyLogTS:166 PktLogTS:165 | MyVecTS:[118, 30, 40, 101, 87, 110, 100, 117, 123, 17] PktVecTS:[118, 28, 40, 101, 78, 94, 84, 110, 123, 11] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(0) : From 1 To 5 | MyLogTS:167 PktLogTS:91 | MyVecTS:[118, 43, 40, 101, 87, 111, 100, 117, 123, 17] PktVecTS:[61, 43, 19, 52, 48, 46, 36, 55, 58, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(0) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 7 To 5 | MyLogTS:168 PktLogTS:164 | MyVecTS:[118, 43, 40, 101, 87, 112, 100, 118, 123, 17] PktVecTS:[118, 28, 25, 95, 87, 102, 100, 118, 110, 11] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:169 PktLogTS:166 | MyVecTS:[118, 43, 40, 101, 87, 113, 107, 118, 123, 20] PktVecTS:[118, 37, 36, 101, 87, 102, 107, 118, 123, 20] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5 | MyLogTS:170 PktLogTS:165 | MyVecTS:[118, 43, 40, 101, 92, 114, 107, 118, 123, 20] PktVecTS:[118, 28, 36, 101, 92, 102, 100, 116, 123, 15] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 0 To 5 | MyLogTS:173 PktLogTS:172 | MyVecTS:[127, 43, 40, 101, 92, 115, 107, 118, 123, 20] PktVecTS:[127, 41, 39, 101, 92, 109, 107, 118, 123, 20] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(0) : From 9 To 5 | MyLogTS:174 PktLogTS:62 | MyVecTS:[127, 43, 40, 101, 92, 116, 107, 118, 123, 24] PktVecTS:[29, 12, 7, 35, 17, 30, 19, 38, 30, 24] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:6.0, [N/2]:3.0
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- Received - MSG_REQUEST_READ_LOCK(0) : From 1 To 5 | MyLogTS:175 PktLogTS:96 | MyVecTS:[127, 47, 40, 101, 92, 117, 107, 118, 123, 24] PktVecTS:[62, 47, 20, 52, 48, 46, 47, 56, 74, 0] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(0) : From 1 To 5
Node:5 -- grant_read_lock(1) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(1) : From 5 To 1
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5 | MyLogTS:177 PktLogTS:174 | MyVecTS:[127, 47, 40, 101, 98, 119, 107, 118, 123, 24] PktVecTS:[127, 47, 40, 101, 98, 109, 107, 118, 123, 20] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 0 To 5 | MyLogTS:178 PktLogTS:175 | MyVecTS:[130, 47, 40, 101, 98, 120, 107, 118, 123, 24] PktVecTS:[130, 47, 40, 101, 98, 109, 107, 118, 123, 20] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 0 To 5
Node:5 -- grant_read_lock(0) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(1) : From 5 To 0
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_RELEASE_READ_LOCK(3) : From 0 To 5 | MyLogTS:196 PktLogTS:195 | MyVecTS:[142, 49, 52, 114, 99, 122, 119, 131, 147, 24] PktVecTS:[142, 49, 52, 114, 99, 121, 119, 131, 147, 24] 
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(3) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5 | MyLogTS:197 PktLogTS:176 | MyVecTS:[142, 49, 52, 114, 99, 123, 119, 131, 147, 24] PktVecTS:[130, 47, 40, 101, 99, 109, 107, 118, 123, 20] 
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_READ_LOCK(0) : From 1 To 5 | MyLogTS:198 PktLogTS:128 | MyVecTS:[142, 56, 52, 114, 99, 124, 119, 131, 147, 24] PktVecTS:[88, 56, 23, 73, 61, 67, 51, 96, 90, 11] 
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(0) : From 1 To 5
Node:5 -- grant_read_lock(1) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(1) : From 5 To 1
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_READ_LOCK(0) : From 1 To 5 | MyLogTS:200 PktLogTS:152 | MyVecTS:[142, 63, 52, 114, 99, 126, 119, 131, 147, 24] PktVecTS:[109, 63, 25, 89, 78, 94, 79, 103, 110, 11] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(0) : From 1 To 5
Node:5 -- grant_read_lock(1) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(1) : From 5 To 1
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:210 PktLogTS:209 | MyVecTS:[156, 66, 52, 114, 99, 128, 119, 131, 147, 29] PktVecTS:[156, 66, 52, 114, 99, 121, 119, 131, 147, 29] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Received - MSG_GRANTED_READ_LOCK(0) : From 9 To 5 | MyLogTS:211 PktLogTS:93 | MyVecTS:[156, 66, 52, 114, 99, 129, 119, 131, 147, 38] PktVecTS:[62, 18, 20, 52, 48, 46, 36, 56, 67, 38] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(0) : From 9 To 5
Node:5 -- send_read_deny_lock(9) called
Node:5 Sent -- MSG_DENY_READ_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:213 PktLogTS:211 | MyVecTS:[158, 70, 52, 114, 99, 131, 119, 131, 147, 38] PktVecTS:[158, 70, 52, 114, 99, 121, 119, 131, 147, 35] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_READ_LOCK(0) : From 1 To 5 | MyLogTS:214 PktLogTS:167 | MyVecTS:[158, 72, 52, 114, 99, 132, 119, 131, 147, 38] PktVecTS:[118, 72, 34, 95, 78, 105, 84, 110, 130, 13] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(0) : From 1 To 5
Node:5 -- grant_read_lock(1) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(1) : From 5 To 1
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:216 PktLogTS:212 | MyVecTS:[159, 72, 52, 114, 99, 134, 119, 131, 147, 38] PktVecTS:[159, 72, 52, 114, 99, 121, 119, 131, 147, 35] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_READ_LOCK(0) : From 1 To 5 | MyLogTS:217 PktLogTS:171 | MyVecTS:[159, 76, 52, 114, 99, 135, 119, 131, 147, 38] PktVecTS:[118, 76, 40, 101, 87, 109, 105, 117, 130, 20] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(0) : From 1 To 5
Node:5 -- grant_read_lock(1) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(1) : From 5 To 1
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:219 PktLogTS:215 | MyVecTS:[162, 76, 52, 114, 99, 137, 119, 131, 147, 52] PktVecTS:[162, 76, 52, 114, 99, 121, 119, 131, 147, 52] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:220 PktLogTS:215 | MyVecTS:[162, 76, 52, 114, 99, 138, 119, 131, 147, 52] PktVecTS:[162, 76, 52, 114, 99, 121, 119, 131, 147, 52] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:221 PktLogTS:217 | MyVecTS:[164, 82, 52, 114, 99, 139, 119, 131, 147, 57] PktVecTS:[164, 82, 52, 114, 99, 121, 119, 131, 147, 57] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:222 PktLogTS:219 | MyVecTS:[166, 86, 52, 114, 99, 140, 119, 131, 147, 57] PktVecTS:[166, 86, 52, 114, 99, 121, 119, 131, 147, 57] 
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Received - MSG_REQUEST_READ_LOCK(0) : From 1 To 5 | MyLogTS:223 PktLogTS:181 | MyVecTS:[166, 86, 52, 114, 99, 141, 119, 131, 147, 57] PktVecTS:[129, 86, 40, 111, 92, 109, 107, 118, 141, 20] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(0) : From 1 To 5
Node:5 -- grant_read_lock(1) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(1) : From 5 To 1
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:225 PktLogTS:219 | MyVecTS:[166, 86, 52, 114, 99, 143, 119, 131, 147, 57] PktVecTS:[166, 86, 52, 114, 99, 121, 119, 131, 147, 57] 
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:226 PktLogTS:222 | MyVecTS:[169, 101, 52, 114, 99, 144, 119, 131, 151, 68] PktVecTS:[169, 101, 52, 114, 99, 121, 119, 131, 151, 68] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 2 To 5 | MyLogTS:229 PktLogTS:228 | MyVecTS:[169, 103, 76, 114, 99, 145, 119, 131, 151, 68] PktVecTS:[169, 103, 76, 114, 99, 121, 119, 131, 151, 68] 
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 2 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:232 PktLogTS:231 | MyVecTS:[169, 107, 76, 138, 99, 146, 119, 156, 151, 68] PktVecTS:[169, 107, 76, 138, 99, 121, 119, 156, 151, 68] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 7 To 5 | MyLogTS:233 PktLogTS:230 | MyVecTS:[169, 107, 76, 138, 99, 147, 119, 156, 151, 68] PktVecTS:[169, 107, 76, 118, 99, 121, 119, 156, 151, 68] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 7 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5 | MyLogTS:234 PktLogTS:231 | MyVecTS:[169, 111, 76, 138, 121, 148, 119, 156, 153, 68] PktVecTS:[169, 111, 76, 138, 121, 121, 119, 156, 153, 68] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:235 PktLogTS:234 | MyVecTS:[174, 111, 76, 138, 121, 149, 119, 156, 153, 78] PktVecTS:[174, 111, 76, 138, 121, 121, 119, 156, 153, 78] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_DENY_READ_LOCK(0) : From 1 To 5 | MyLogTS:236 PktLogTS:219 | MyVecTS:[174, 113, 76, 138, 121, 150, 119, 156, 153, 78] PktVecTS:[149, 113, 56, 118, 101, 125, 119, 135, 153, 24] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_READ_LOCK(0) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(1) : From 4 To 5 | MyLogTS:239 PktLogTS:238 | MyVecTS:[174, 113, 76, 138, 125, 151, 119, 156, 153, 78] PktVecTS:[174, 113, 76, 138, 125, 150, 119, 156, 153, 78] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(1) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:240 PktLogTS:237 | MyVecTS:[174, 113, 76, 141, 125, 152, 119, 156, 153, 78] PktVecTS:[174, 113, 76, 141, 121, 150, 119, 156, 153, 78] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 7 To 5 | MyLogTS:241 PktLogTS:237 | MyVecTS:[174, 113, 76, 141, 125, 153, 119, 160, 153, 78] PktVecTS:[174, 113, 76, 138, 121, 150, 119, 160, 153, 78] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:243 PktLogTS:242 | MyVecTS:[180, 113, 81, 141, 125, 154, 119, 160, 153, 83] PktVecTS:[180, 113, 81, 141, 121, 150, 119, 159, 153, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 2 To 5 | MyLogTS:245 PktLogTS:244 | MyVecTS:[180, 113, 86, 141, 125, 155, 119, 160, 153, 83] PktVecTS:[180, 113, 86, 141, 121, 150, 119, 160, 153, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 2 To 5
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[4, 5] P-Set Size:2
Node:5 -- [Write] -- Q-Set:[4, 5] Q-Set Size:2
Node:5 -- [Write] -- QSize:2.0, N:6.0, [N/2]:3.0
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 Sent -- MSG_RELEASE_WRITE_LOCK(1) : From 5 To 4
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5 | MyLogTS:248 PktLogTS:247 | MyVecTS:[180, 113, 86, 141, 130, 157, 119, 160, 153, 83] PktVecTS:[180, 113, 86, 141, 130, 156, 119, 160, 153, 83] 
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:252 PktLogTS:251 | MyVecTS:[186, 118, 86, 141, 130, 158, 151, 160, 153, 83] PktVecTS:[186, 118, 86, 141, 130, 157, 151, 160, 153, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 7 To 5 | MyLogTS:253 PktLogTS:248 | MyVecTS:[186, 118, 86, 141, 130, 159, 151, 166, 180, 83] PktVecTS:[180, 113, 86, 141, 130, 156, 119, 166, 180, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[0, 5] P-Set Size:2
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:6.0, [N/2]:3.0
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 2 To 5 | MyLogTS:254 PktLogTS:250 | MyVecTS:[186, 122, 90, 141, 130, 160, 151, 166, 180, 83] PktVecTS:[180, 122, 90, 141, 130, 157, 123, 166, 180, 83] 
Node:5 Sent -- MSG_RELEASE_WRITE_LOCK(1) : From 5 To 0
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 2 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- grant_write_lock(2) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(1) : From 5 To 2
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_SEND_UPDATED_FILE(0) : From 2 To 5 | MyLogTS:264 PktLogTS:263 | MyVecTS:[186, 122, 96, 146, 138, 163, 151, 169, 196, 83] PktVecTS:[186, 122, 96, 146, 138, 162, 151, 169, 196, 83] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_SEND_UPDATED_FILE(0) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_RELEASE_WRITE_LOCK(0) : From 2 To 5 | MyLogTS:268 PktLogTS:267 | MyVecTS:[186, 122, 100, 146, 138, 164, 151, 169, 196, 83] PktVecTS:[186, 122, 100, 146, 138, 162, 151, 169, 196, 83] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_WRITE_LOCK(0) : From 2 To 5
Node:5 -- C5 - WLF should be true, next operation false, rcv release write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C5 - WLF should be false, rcv release write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 7 To 5 | MyLogTS:270 PktLogTS:269 | MyVecTS:[186, 124, 101, 146, 138, 165, 151, 172, 196, 83] PktVecTS:[186, 124, 101, 146, 138, 162, 151, 172, 196, 83] 
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(1) : From 2 To 5 | MyLogTS:271 PktLogTS:270 | MyVecTS:[186, 124, 103, 146, 138, 166, 151, 172, 196, 83] PktVecTS:[186, 124, 103, 146, 138, 162, 151, 172, 196, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(1) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5 | MyLogTS:272 PktLogTS:267 | MyVecTS:[186, 124, 103, 146, 141, 167, 151, 172, 196, 83] PktVecTS:[186, 124, 101, 146, 141, 162, 151, 172, 196, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_DENY_READ_LOCK(0) : From 1 To 5 | MyLogTS:273 PktLogTS:238 | MyVecTS:[186, 132, 103, 146, 141, 168, 151, 172, 196, 83] PktVecTS:[155, 132, 58, 120, 103, 127, 125, 137, 157, 29] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_READ_LOCK(0) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 7 To 5 | MyLogTS:276 PktLogTS:275 | MyVecTS:[186, 132, 103, 146, 141, 169, 151, 177, 201, 83] PktVecTS:[186, 126, 103, 146, 141, 165, 151, 177, 201, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 7 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- grant_write_lock(7) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(1) : From 5 To 7
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:278 PktLogTS:256 | MyVecTS:[186, 132, 103, 151, 141, 171, 151, 177, 201, 83] PktVecTS:[180, 120, 89, 151, 135, 157, 123, 166, 191, 83] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_SEND_UPDATED_FILE(2) : From 7 To 5 | MyLogTS:287 PktLogTS:286 | MyVecTS:[186, 138, 107, 151, 146, 172, 151, 186, 207, 83] PktVecTS:[186, 138, 107, 151, 146, 170, 151, 186, 207, 83] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_SEND_UPDATED_FILE(2) : From 7 To 5
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_RELEASE_WRITE_LOCK(2) : From 7 To 5 | MyLogTS:291 PktLogTS:290 | MyVecTS:[186, 138, 107, 151, 146, 173, 151, 190, 207, 83] PktVecTS:[186, 138, 107, 151, 146, 170, 151, 190, 207, 83] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_WRITE_LOCK(2) : From 7 To 5
Node:5 -- C5 - WLF should be true, next operation false, rcv release write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C5 - WLF should be false, rcv release write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:292 PktLogTS:270 | MyVecTS:[191, 138, 107, 151, 146, 174, 151, 190, 207, 83] PktVecTS:[191, 124, 101, 151, 138, 162, 151, 172, 196, 83] 
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(1) : From 2 To 5 | MyLogTS:293 PktLogTS:290 | MyVecTS:[191, 138, 111, 151, 146, 175, 151, 190, 207, 83] PktVecTS:[191, 138, 111, 151, 146, 170, 151, 188, 207, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(1) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_DENY_READ_LOCK(0) : From 1 To 5 | MyLogTS:294 PktLogTS:248 | MyVecTS:[191, 142, 111, 151, 146, 176, 151, 190, 207, 83] PktVecTS:[158, 142, 58, 124, 103, 133, 125, 143, 163, 40] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_READ_LOCK(0) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:298 PktLogTS:297 | MyVecTS:[191, 142, 111, 162, 146, 177, 151, 192, 207, 83] PktVecTS:[191, 138, 111, 162, 146, 173, 151, 192, 207, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:308 PktLogTS:307 | MyVecTS:[206, 146, 114, 165, 150, 178, 151, 196, 218, 83] PktVecTS:[206, 146, 114, 165, 150, 177, 151, 196, 218, 83] 
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(1) : From 2 To 5 | MyLogTS:309 PktLogTS:308 | MyVecTS:[206, 146, 115, 165, 150, 179, 151, 196, 218, 83] PktVecTS:[206, 146, 115, 165, 150, 177, 151, 196, 218, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(1) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:317 PktLogTS:316 | MyVecTS:[212, 151, 115, 173, 150, 180, 151, 196, 221, 83] PktVecTS:[212, 151, 115, 173, 150, 177, 151, 196, 221, 83] 
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 -- Received - MSG_DENY_READ_LOCK(0) : From 1 To 5 | MyLogTS:318 PktLogTS:263 | MyVecTS:[212, 157, 115, 173, 150, 181, 151, 196, 221, 83] PktVecTS:[159, 157, 65, 127, 110, 136, 131, 143, 163, 40] 
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_READ_LOCK(0) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:319 PktLogTS:237 | MyVecTS:[212, 157, 115, 173, 150, 182, 151, 196, 221, 83] PktVecTS:[174, 115, 76, 138, 121, 150, 151, 156, 153, 78] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:320 PktLogTS:294 | MyVecTS:[212, 157, 115, 173, 150, 183, 169, 196, 221, 83] PktVecTS:[191, 138, 107, 151, 146, 174, 169, 190, 207, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:325 PktLogTS:324 | MyVecTS:[215, 157, 120, 178, 150, 184, 169, 196, 226, 83] PktVecTS:[215, 151, 120, 178, 150, 180, 151, 196, 226, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:326 PktLogTS:324 | MyVecTS:[215, 157, 120, 180, 150, 185, 169, 196, 226, 83] PktVecTS:[212, 151, 118, 180, 150, 180, 151, 196, 226, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(1) : From 2 To 5 | MyLogTS:327 PktLogTS:324 | MyVecTS:[215, 157, 121, 180, 150, 186, 169, 196, 226, 83] PktVecTS:[212, 155, 121, 178, 150, 180, 151, 196, 226, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(1) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5, 6] P-Set Size:2
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 Sent -- MSG_RELEASE_WRITE_LOCK(1) : From 5 To 6
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:338 PktLogTS:337 | MyVecTS:[221, 161, 121, 184, 150, 188, 179, 196, 234, 83] PktVecTS:[221, 161, 121, 184, 150, 181, 179, 196, 234, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- grant_write_lock(3) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(1) : From 5 To 3
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:340 PktLogTS:334 | MyVecTS:[221, 163, 121, 184, 150, 190, 186, 196, 234, 83] PktVecTS:[221, 163, 121, 184, 150, 187, 186, 196, 234, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_RELEASE_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:344 PktLogTS:343 | MyVecTS:[221, 163, 121, 189, 150, 191, 186, 196, 240, 83] PktVecTS:[221, 163, 121, 189, 150, 189, 185, 196, 240, 83] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_WRITE_LOCK(1) : From 3 To 5
Node:5 -- C5 - WLF should be true, next operation false, rcv release write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C5 - WLF should be false, rcv release write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:346 PktLogTS:345 | MyVecTS:[224, 163, 121, 189, 150, 192, 186, 196, 240, 83] PktVecTS:[224, 163, 121, 189, 150, 191, 186, 196, 240, 83] 
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(1) : From 2 To 5 | MyLogTS:347 PktLogTS:346 | MyVecTS:[224, 163, 130, 189, 150, 193, 188, 196, 240, 83] PktVecTS:[224, 163, 130, 189, 150, 191, 188, 196, 240, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(1) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:352 PktLogTS:351 | MyVecTS:[229, 163, 130, 190, 150, 194, 192, 196, 244, 83] PktVecTS:[229, 163, 130, 190, 150, 191, 192, 196, 244, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5 | MyLogTS:353 PktLogTS:291 | MyVecTS:[229, 163, 130, 190, 150, 195, 192, 196, 244, 83] PktVecTS:[191, 138, 107, 151, 150, 170, 151, 189, 207, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 7 To 5 | MyLogTS:354 PktLogTS:299 | MyVecTS:[229, 163, 130, 190, 150, 196, 192, 197, 244, 83] PktVecTS:[191, 138, 111, 162, 146, 174, 151, 197, 207, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:361 PktLogTS:360 | MyVecTS:[233, 170, 133, 190, 150, 197, 198, 197, 248, 83] PktVecTS:[233, 170, 133, 190, 150, 191, 198, 197, 248, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(1) : From 2 To 5 | MyLogTS:363 PktLogTS:362 | MyVecTS:[233, 170, 139, 190, 150, 198, 199, 200, 248, 83] PktVecTS:[233, 170, 139, 190, 150, 191, 199, 200, 248, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(1) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_DENY_READ_LOCK(0) : From 1 To 5 | MyLogTS:364 PktLogTS:284 | MyVecTS:[233, 178, 139, 190, 150, 199, 199, 200, 248, 83] PktVecTS:[166, 178, 70, 132, 110, 142, 136, 152, 168, 65] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_READ_LOCK(0) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:372 PktLogTS:371 | MyVecTS:[240, 178, 139, 190, 150, 200, 205, 200, 253, 83] PktVecTS:[240, 170, 139, 190, 150, 191, 205, 200, 253, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:381 PktLogTS:380 | MyVecTS:[242, 178, 148, 190, 176, 201, 210, 210, 257, 83] PktVecTS:[242, 170, 148, 190, 176, 192, 210, 210, 257, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- grant_write_lock(0) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(1) : From 5 To 0
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_RELEASE_READ_LOCK(0) : From 1 To 5 | MyLogTS:383 PktLogTS:291 | MyVecTS:[242, 185, 148, 190, 176, 203, 210, 210, 257, 83] PktVecTS:[169, 185, 74, 132, 116, 142, 136, 152, 168, 68] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(0) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 2 To 5 | MyLogTS:384 PktLogTS:381 | MyVecTS:[242, 185, 149, 190, 176, 204, 210, 210, 257, 83] PktVecTS:[242, 170, 149, 190, 176, 192, 210, 210, 257, 83] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_RELEASE_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:389 PktLogTS:388 | MyVecTS:[248, 189, 149, 190, 176, 205, 213, 210, 261, 83] PktVecTS:[248, 189, 148, 190, 176, 202, 213, 210, 261, 83] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_WRITE_LOCK(4) : From 0 To 5
Node:5 -- C5 - WLF should be true, next operation false, rcv release write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C5 - WLF should be false, rcv release write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:394 PktLogTS:393 | MyVecTS:[252, 189, 149, 190, 176, 206, 217, 210, 261, 83] PktVecTS:[252, 189, 149, 190, 176, 202, 217, 210, 261, 83] 
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 2 To 5 | MyLogTS:395 PktLogTS:391 | MyVecTS:[252, 189, 153, 190, 183, 207, 217, 210, 261, 83] PktVecTS:[252, 189, 153, 190, 183, 202, 217, 210, 261, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:396 PktLogTS:345 | MyVecTS:[252, 189, 153, 191, 183, 208, 217, 210, 261, 83] PktVecTS:[221, 163, 129, 191, 150, 189, 188, 196, 240, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:402 PktLogTS:401 | MyVecTS:[256, 189, 153, 191, 183, 209, 223, 210, 266, 83] PktVecTS:[256, 189, 153, 191, 183, 206, 223, 210, 266, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:403 PktLogTS:402 | MyVecTS:[256, 189, 153, 191, 183, 210, 224, 210, 266, 83] PktVecTS:[256, 189, 153, 191, 183, 206, 224, 210, 266, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 2 To 5 | MyLogTS:404 PktLogTS:403 | MyVecTS:[256, 189, 159, 191, 188, 211, 224, 210, 266, 83] PktVecTS:[256, 189, 159, 191, 188, 206, 224, 210, 266, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:409 PktLogTS:408 | MyVecTS:[261, 189, 159, 191, 188, 212, 224, 210, 272, 83] PktVecTS:[261, 189, 159, 191, 188, 211, 224, 210, 272, 83] 
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:410 PktLogTS:409 | MyVecTS:[261, 203, 159, 191, 188, 213, 229, 210, 272, 83] PktVecTS:[261, 203, 159, 191, 188, 211, 229, 210, 272, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 2 To 5 | MyLogTS:420 PktLogTS:419 | MyVecTS:[261, 203, 170, 191, 194, 214, 234, 210, 272, 83] PktVecTS:[261, 203, 170, 191, 194, 213, 234, 210, 272, 83] 
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 2 To 5 | MyLogTS:425 PktLogTS:424 | MyVecTS:[261, 203, 173, 191, 204, 215, 234, 210, 272, 83] PktVecTS:[261, 203, 173, 191, 204, 214, 234, 210, 272, 83] 
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(2) : From 2 To 5 | MyLogTS:432 PktLogTS:431 | MyVecTS:[261, 203, 177, 191, 208, 216, 234, 210, 272, 83] PktVecTS:[261, 203, 177, 191, 208, 215, 234, 210, 272, 83] 
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(2) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:433 PktLogTS:420 | MyVecTS:[261, 203, 177, 191, 208, 217, 235, 210, 272, 83] PktVecTS:[261, 203, 170, 191, 194, 213, 235, 210, 272, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[2, 5] P-Set Size:2
Node:5 -- [Write] -- Q-Set:[2, 5] Q-Set Size:2
Node:5 -- [Write] -- QSize:2.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 Sent -- MSG_RELEASE_WRITE_LOCK(1) : From 5 To 2
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:435 PktLogTS:426 | MyVecTS:[261, 203, 177, 191, 208, 219, 238, 210, 272, 83] PktVecTS:[261, 203, 173, 191, 204, 215, 238, 210, 272, 83] 
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 2 To 5 | MyLogTS:437 PktLogTS:436 | MyVecTS:[261, 203, 180, 191, 208, 220, 238, 210, 272, 83] PktVecTS:[261, 203, 180, 191, 208, 218, 238, 210, 272, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:438 PktLogTS:437 | MyVecTS:[261, 203, 180, 191, 208, 221, 239, 210, 272, 83] PktVecTS:[261, 203, 180, 191, 208, 218, 239, 210, 272, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:443 PktLogTS:442 | MyVecTS:[278, 203, 180, 191, 208, 222, 239, 210, 280, 83] PktVecTS:[278, 203, 180, 191, 208, 221, 239, 210, 280, 83] 
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:448 PktLogTS:447 | MyVecTS:[280, 203, 180, 191, 208, 223, 239, 210, 298, 83] PktVecTS:[280, 203, 180, 191, 208, 221, 239, 210, 298, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:453 PktLogTS:452 | MyVecTS:[282, 203, 180, 191, 208, 224, 239, 210, 301, 83] PktVecTS:[282, 203, 180, 191, 208, 221, 239, 210, 301, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:458 PktLogTS:457 | MyVecTS:[284, 203, 180, 191, 208, 225, 239, 210, 304, 83] PktVecTS:[284, 203, 180, 191, 208, 221, 239, 210, 304, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:463 PktLogTS:462 | MyVecTS:[286, 203, 180, 191, 208, 226, 239, 210, 307, 83] PktVecTS:[286, 203, 180, 191, 208, 221, 239, 210, 307, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:468 PktLogTS:467 | MyVecTS:[288, 203, 180, 191, 208, 227, 239, 210, 310, 83] PktVecTS:[288, 203, 180, 191, 208, 221, 239, 210, 310, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:473 PktLogTS:472 | MyVecTS:[290, 203, 180, 191, 208, 228, 239, 210, 313, 83] PktVecTS:[290, 203, 180, 191, 208, 221, 239, 210, 313, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:478 PktLogTS:477 | MyVecTS:[292, 203, 180, 191, 208, 229, 239, 210, 316, 83] PktVecTS:[292, 203, 180, 191, 208, 221, 239, 210, 316, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:483 PktLogTS:482 | MyVecTS:[294, 203, 180, 191, 208, 230, 239, 210, 319, 83] PktVecTS:[294, 203, 180, 191, 208, 221, 239, 210, 319, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:488 PktLogTS:487 | MyVecTS:[296, 203, 180, 191, 208, 231, 239, 210, 322, 83] PktVecTS:[296, 203, 180, 191, 208, 221, 239, 210, 322, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:493 PktLogTS:492 | MyVecTS:[298, 203, 180, 191, 208, 232, 239, 210, 325, 83] PktVecTS:[298, 203, 180, 191, 208, 221, 239, 210, 325, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:494 PktLogTS:391 | MyVecTS:[298, 251, 180, 191, 208, 233, 239, 214, 325, 98] PktVecTS:[249, 251, 149, 190, 176, 202, 216, 214, 261, 98] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:499 PktLogTS:498 | MyVecTS:[301, 251, 180, 191, 208, 234, 239, 214, 328, 98] PktVecTS:[301, 251, 180, 191, 208, 221, 239, 214, 328, 98] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:503 PktLogTS:502 | MyVecTS:[303, 251, 180, 191, 208, 235, 239, 214, 331, 98] PktVecTS:[303, 251, 180, 191, 208, 221, 239, 214, 331, 98] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:508 PktLogTS:507 | MyVecTS:[305, 251, 180, 191, 208, 236, 239, 214, 335, 98] PktVecTS:[305, 251, 180, 191, 208, 221, 239, 214, 335, 98] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:513 PktLogTS:512 | MyVecTS:[307, 251, 180, 191, 208, 237, 239, 214, 338, 98] PktVecTS:[307, 251, 180, 191, 208, 221, 239, 214, 338, 98] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 7 To 5 | MyLogTS:514 PktLogTS:354 | MyVecTS:[307, 251, 180, 191, 208, 238, 239, 220, 338, 98] PktVecTS:[229, 173, 130, 190, 150, 191, 192, 220, 244, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:519 PktLogTS:518 | MyVecTS:[311, 251, 183, 191, 238, 239, 239, 245, 341, 98] PktVecTS:[311, 251, 183, 191, 238, 221, 239, 245, 341, 98] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5 | MyLogTS:520 PktLogTS:519 | MyVecTS:[311, 251, 183, 191, 239, 240, 239, 245, 341, 98] PktVecTS:[311, 251, 183, 191, 239, 221, 239, 245, 341, 98] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 7 To 5 | MyLogTS:521 PktLogTS:429 | MyVecTS:[311, 251, 183, 191, 239, 241, 239, 257, 341, 98] PktVecTS:[261, 203, 177, 191, 208, 216, 238, 257, 272, 83] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5 | MyLogTS:551 PktLogTS:550 | MyVecTS:[320, 292, 238, 191, 242, 242, 248, 282, 345, 155] PktVecTS:[320, 292, 238, 191, 242, 221, 248, 282, 345, 155] 
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5
Node:5 -- exponential_backoff() called
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- grant_write_lock(4) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(1) : From 5 To 4
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 2 To 5 | MyLogTS:553 PktLogTS:543 | MyVecTS:[320, 292, 239, 191, 242, 244, 248, 282, 345, 155] PktVecTS:[310, 292, 239, 191, 238, 221, 247, 257, 341, 155] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:554 PktLogTS:513 | MyVecTS:[320, 292, 239, 191, 242, 245, 248, 282, 345, 155] PktVecTS:[305, 292, 208, 191, 214, 221, 239, 214, 335, 129] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:555 PktLogTS:551 | MyVecTS:[320, 292, 239, 191, 242, 246, 267, 282, 345, 155] PktVecTS:[320, 292, 238, 191, 242, 221, 267, 282, 345, 155] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5 | MyLogTS:559 PktLogTS:558 | MyVecTS:[320, 292, 239, 191, 248, 247, 267, 282, 350, 155] PktVecTS:[320, 292, 239, 191, 248, 221, 267, 282, 350, 155] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:560 PktLogTS:559 | MyVecTS:[325, 292, 239, 191, 248, 248, 267, 284, 350, 155] PktVecTS:[325, 292, 239, 191, 248, 221, 267, 284, 350, 155] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 4 To 5 | MyLogTS:575 PktLogTS:574 | MyVecTS:[327, 292, 251, 254, 259, 249, 271, 284, 355, 162] PktVecTS:[327, 292, 251, 254, 259, 221, 271, 284, 355, 162] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:576 PktLogTS:575 | MyVecTS:[327, 292, 251, 254, 259, 250, 275, 284, 355, 162] PktVecTS:[327, 292, 251, 254, 259, 221, 275, 284, 355, 162] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 2 To 5 | MyLogTS:577 PktLogTS:572 | MyVecTS:[327, 292, 255, 254, 259, 251, 275, 284, 355, 162] PktVecTS:[327, 292, 255, 254, 259, 221, 271, 284, 355, 162] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 7 To 5 | MyLogTS:578 PktLogTS:553 | MyVecTS:[327, 292, 255, 254, 259, 252, 275, 296, 355, 162] PktVecTS:[322, 292, 239, 191, 242, 221, 248, 296, 345, 159] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 4 To 5 | MyLogTS:584 PktLogTS:583 | MyVecTS:[327, 292, 255, 261, 266, 253, 275, 296, 355, 162] PktVecTS:[327, 292, 255, 261, 266, 221, 275, 296, 355, 162] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 2 To 5 | MyLogTS:590 PktLogTS:589 | MyVecTS:[337, 292, 265, 264, 266, 254, 275, 296, 355, 162] PktVecTS:[337, 292, 265, 264, 265, 221, 275, 296, 355, 162] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:591 PktLogTS:590 | MyVecTS:[337, 299, 265, 264, 266, 255, 281, 296, 355, 162] PktVecTS:[337, 299, 265, 264, 266, 221, 281, 296, 355, 162] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:592 PktLogTS:588 | MyVecTS:[337, 315, 265, 264, 266, 256, 281, 296, 360, 162] PktVecTS:[337, 315, 265, 264, 266, 221, 280, 296, 360, 162] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 2 To 5 | MyLogTS:607 PktLogTS:606 | MyVecTS:[342, 315, 278, 271, 266, 257, 281, 296, 368, 174] PktVecTS:[342, 315, 278, 271, 266, 221, 281, 296, 368, 174] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:608 PktLogTS:605 | MyVecTS:[342, 319, 278, 271, 266, 258, 281, 296, 368, 174] PktVecTS:[342, 319, 278, 271, 266, 221, 281, 296, 368, 174] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 2 To 5 | MyLogTS:616 PktLogTS:615 | MyVecTS:[345, 319, 283, 276, 266, 259, 281, 296, 373, 184] PktVecTS:[345, 319, 283, 276, 266, 221, 281, 296, 373, 184] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_READ_LOCK(4) : From 2 To 5 | MyLogTS:629 PktLogTS:628 | MyVecTS:[348, 321, 292, 279, 266, 260, 281, 296, 376, 184] PktVecTS:[348, 321, 292, 279, 266, 221, 281, 296, 376, 184] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(4) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:630 PktLogTS:626 | MyVecTS:[348, 323, 292, 279, 266, 261, 281, 296, 376, 184] PktVecTS:[345, 323, 291, 279, 266, 221, 281, 296, 376, 184] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:638 PktLogTS:637 | MyVecTS:[348, 323, 299, 282, 266, 262, 289, 296, 379, 184] PktVecTS:[348, 323, 299, 282, 266, 221, 289, 296, 379, 184] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:639 PktLogTS:626 | MyVecTS:[348, 323, 299, 282, 266, 263, 289, 296, 379, 184] PktVecTS:[345, 323, 291, 279, 266, 221, 281, 296, 376, 184] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:644 PktLogTS:643 | MyVecTS:[348, 323, 300, 282, 266, 264, 292, 296, 383, 184] PktVecTS:[348, 323, 300, 282, 266, 221, 292, 296, 383, 184] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 4 To 5 | MyLogTS:645 PktLogTS:616 | MyVecTS:[348, 323, 300, 282, 280, 265, 292, 296, 383, 184] PktVecTS:[345, 319, 283, 276, 280, 221, 281, 296, 373, 184] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:646 PktLogTS:524 | MyVecTS:[348, 323, 300, 282, 280, 266, 292, 296, 383, 203] PktVecTS:[307, 275, 212, 191, 214, 221, 239, 215, 338, 203] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 7 To 5 | MyLogTS:647 PktLogTS:638 | MyVecTS:[348, 323, 300, 282, 280, 267, 292, 330, 383, 203] PktVecTS:[348, 323, 299, 282, 266, 221, 289, 330, 379, 184] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 4 To 5 | MyLogTS:657 PktLogTS:656 | MyVecTS:[348, 323, 312, 282, 296, 268, 292, 330, 383, 203] PktVecTS:[348, 323, 312, 282, 296, 221, 292, 316, 383, 203] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 4 To 5
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:658 PktLogTS:657 | MyVecTS:[348, 323, 312, 282, 296, 269, 298, 330, 387, 203] PktVecTS:[348, 323, 312, 282, 296, 221, 298, 330, 387, 203] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 7 To 5 | MyLogTS:674 PktLogTS:673 | MyVecTS:[365, 323, 329, 293, 296, 270, 298, 349, 387, 203] PktVecTS:[365, 323, 329, 293, 296, 221, 298, 349, 387, 203] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:675 PktLogTS:628 | MyVecTS:[365, 325, 329, 293, 296, 271, 298, 349, 387, 203] PktVecTS:[345, 325, 291, 279, 266, 221, 281, 296, 376, 184] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(1) : From 1 To 5
Node:5 -- send_write_deny_lock(1) called
Node:5 Sent -- MSG_DENY_WRITE_LOCK(1) : From 5 To 1
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 4 To 5 | MyLogTS:677 PktLogTS:674 | MyVecTS:[365, 325, 332, 296, 310, 273, 298, 349, 393, 203] PktVecTS:[362, 323, 332, 296, 310, 221, 297, 340, 393, 203] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:678 PktLogTS:551 | MyVecTS:[365, 325, 332, 296, 310, 274, 298, 349, 393, 216] PktVecTS:[320, 292, 238, 191, 242, 221, 248, 289, 345, 216] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_READ_LOCK(4) : From 7 To 5 | MyLogTS:697 PktLogTS:696 | MyVecTS:[371, 325, 341, 298, 313, 275, 298, 369, 395, 216] PktVecTS:[371, 323, 341, 298, 313, 221, 298, 369, 395, 216] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(4) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:749 PktLogTS:748 | MyVecTS:[391, 325, 371, 312, 341, 276, 307, 385, 406, 228] PktVecTS:[391, 323, 371, 312, 341, 221, 307, 385, 406, 228] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:750 PktLogTS:711 | MyVecTS:[391, 325, 371, 312, 341, 277, 307, 385, 406, 228] PktVecTS:[374, 323, 346, 309, 332, 221, 304, 380, 402, 216] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_READ_LOCK(4) : From 4 To 5 | MyLogTS:751 PktLogTS:707 | MyVecTS:[391, 325, 371, 312, 341, 278, 307, 385, 406, 228] PktVecTS:[374, 323, 341, 303, 332, 221, 301, 369, 398, 216] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(4) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:752 PktLogTS:724 | MyVecTS:[391, 325, 371, 312, 341, 279, 307, 385, 406, 228] PktVecTS:[380, 323, 350, 312, 340, 221, 307, 385, 406, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:756 PktLogTS:755 | MyVecTS:[394, 325, 374, 320, 341, 280, 307, 385, 406, 228] PktVecTS:[394, 323, 374, 320, 341, 221, 307, 385, 406, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:757 PktLogTS:754 | MyVecTS:[395, 325, 377, 320, 341, 281, 307, 385, 406, 228] PktVecTS:[395, 323, 377, 312, 341, 221, 307, 385, 406, 228] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_DENY_WRITE_LOCK(4) : From 4 To 5 | MyLogTS:759 PktLogTS:758 | MyVecTS:[395, 325, 377, 320, 357, 282, 307, 385, 406, 228] PktVecTS:[394, 323, 374, 320, 357, 243, 307, 385, 406, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_WRITE_LOCK(4) : From 4 To 5
Node:5 -- C4 - WLF should be true, next operation false, rcv deny write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C4 - WLF should be false, rcv deny write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:760 PktLogTS:749 | MyVecTS:[395, 325, 377, 320, 357, 283, 307, 385, 406, 228] PktVecTS:[392, 323, 371, 312, 341, 221, 307, 385, 406, 228] 
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:761 PktLogTS:739 | MyVecTS:[395, 325, 377, 320, 357, 284, 307, 385, 406, 228] PktVecTS:[388, 323, 364, 312, 341, 221, 307, 385, 406, 228] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:762 PktLogTS:755 | MyVecTS:[395, 325, 377, 320, 357, 285, 307, 385, 406, 228] PktVecTS:[394, 323, 374, 320, 341, 221, 307, 385, 406, 228] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:763 PktLogTS:758 | MyVecTS:[395, 354, 377, 320, 357, 286, 307, 385, 406, 228] PktVecTS:[394, 354, 374, 320, 341, 272, 307, 385, 406, 228] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:767 PktLogTS:766 | MyVecTS:[401, 354, 377, 323, 357, 287, 307, 385, 406, 228] PktVecTS:[401, 354, 377, 323, 341, 272, 307, 385, 406, 228] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:768 PktLogTS:723 | MyVecTS:[401, 354, 377, 323, 357, 288, 307, 385, 406, 228] PktVecTS:[380, 323, 350, 311, 340, 221, 307, 385, 406, 228] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:769 PktLogTS:768 | MyVecTS:[401, 358, 386, 323, 357, 289, 307, 385, 406, 228] PktVecTS:[401, 358, 386, 323, 341, 272, 307, 385, 406, 228] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:773 PktLogTS:772 | MyVecTS:[404, 358, 386, 327, 357, 290, 307, 385, 406, 228] PktVecTS:[404, 357, 382, 327, 341, 272, 307, 385, 406, 228] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:774 PktLogTS:603 | MyVecTS:[404, 358, 386, 327, 357, 291, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:778 PktLogTS:777 | MyVecTS:[407, 358, 386, 329, 357, 292, 307, 385, 406, 228] PktVecTS:[407, 357, 382, 329, 341, 272, 307, 385, 406, 228] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:786 PktLogTS:785 | MyVecTS:[411, 358, 386, 333, 357, 293, 307, 385, 406, 228] PktVecTS:[411, 357, 382, 333, 341, 272, 307, 385, 406, 228] 
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- exponential_backoff() called
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- grant_write_lock(3) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(1) : From 5 To 3
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:789 PktLogTS:788 | MyVecTS:[414, 362, 391, 335, 357, 295, 307, 385, 406, 228] PktVecTS:[414, 362, 391, 335, 341, 272, 307, 385, 406, 228] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:790 PktLogTS:727 | MyVecTS:[414, 362, 391, 335, 357, 296, 307, 385, 406, 228] PktVecTS:[383, 323, 360, 312, 341, 221, 307, 385, 406, 228] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:791 PktLogTS:789 | MyVecTS:[414, 365, 391, 335, 357, 297, 307, 385, 406, 228] PktVecTS:[414, 365, 391, 335, 341, 272, 307, 385, 406, 228] 
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:800 PktLogTS:799 | MyVecTS:[421, 365, 394, 341, 357, 298, 307, 385, 406, 228] PktVecTS:[421, 365, 394, 341, 341, 272, 307, 385, 406, 228] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:805 PktLogTS:804 | MyVecTS:[421, 365, 398, 344, 357, 299, 307, 385, 406, 228] PktVecTS:[421, 365, 398, 344, 341, 272, 307, 385, 406, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:806 PktLogTS:805 | MyVecTS:[423, 365, 398, 344, 357, 300, 307, 385, 406, 228] PktVecTS:[423, 365, 398, 344, 341, 272, 307, 385, 406, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:812 PktLogTS:811 | MyVecTS:[423, 368, 401, 349, 357, 301, 307, 385, 406, 228] PktVecTS:[423, 368, 401, 349, 341, 272, 307, 385, 406, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:813 PktLogTS:812 | MyVecTS:[423, 371, 401, 349, 357, 302, 307, 385, 406, 228] PktVecTS:[423, 371, 401, 349, 341, 272, 307, 385, 406, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:814 PktLogTS:603 | MyVecTS:[423, 371, 401, 349, 357, 303, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:815 PktLogTS:603 | MyVecTS:[423, 371, 401, 349, 357, 304, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:816 PktLogTS:733 | MyVecTS:[423, 371, 401, 349, 357, 305, 307, 385, 406, 228] PktVecTS:[386, 323, 364, 312, 341, 221, 307, 385, 406, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:817 PktLogTS:603 | MyVecTS:[423, 371, 401, 349, 357, 306, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:823 PktLogTS:822 | MyVecTS:[423, 371, 410, 354, 357, 307, 307, 385, 406, 228] PktVecTS:[423, 371, 410, 354, 341, 272, 307, 385, 406, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:824 PktLogTS:603 | MyVecTS:[423, 371, 410, 354, 357, 308, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:825 PktLogTS:603 | MyVecTS:[423, 371, 410, 354, 357, 309, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:826 PktLogTS:603 | MyVecTS:[423, 371, 410, 354, 357, 310, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:827 PktLogTS:603 | MyVecTS:[423, 371, 410, 354, 357, 311, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:828 PktLogTS:603 | MyVecTS:[423, 371, 410, 354, 357, 312, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:829 PktLogTS:713 | MyVecTS:[423, 371, 410, 354, 357, 313, 307, 385, 406, 228] PktVecTS:[374, 323, 346, 306, 332, 221, 307, 382, 402, 216] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:830 PktLogTS:603 | MyVecTS:[423, 371, 410, 354, 357, 314, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:831 PktLogTS:603 | MyVecTS:[423, 371, 410, 354, 357, 315, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:832 PktLogTS:603 | MyVecTS:[423, 371, 410, 354, 357, 316, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:833 PktLogTS:603 | MyVecTS:[423, 371, 410, 354, 357, 317, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:834 PktLogTS:603 | MyVecTS:[423, 371, 410, 354, 357, 318, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:841 PktLogTS:840 | MyVecTS:[423, 388, 410, 370, 357, 319, 307, 385, 406, 228] PktVecTS:[423, 388, 410, 370, 357, 290, 307, 385, 406, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:842 PktLogTS:603 | MyVecTS:[423, 388, 410, 370, 357, 320, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:843 PktLogTS:603 | MyVecTS:[423, 388, 410, 370, 357, 321, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:844 PktLogTS:603 | MyVecTS:[423, 388, 410, 370, 357, 322, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:845 PktLogTS:603 | MyVecTS:[423, 388, 410, 370, 357, 323, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:846 PktLogTS:603 | MyVecTS:[423, 388, 410, 370, 357, 324, 307, 385, 406, 228] PktVecTS:[337, 315, 276, 271, 266, 221, 281, 296, 368, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:847 PktLogTS:843 | MyVecTS:[445, 388, 410, 370, 357, 325, 307, 385, 406, 228] PktVecTS:[445, 388, 410, 370, 357, 290, 307, 385, 406, 228] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(4) : From 0 To 5
Node:5 -- send_write_deny_lock(0) called
Node:5 Sent -- MSG_DENY_WRITE_LOCK(1) : From 5 To 0
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(4) : From 4 To 5 | MyLogTS:857 PktLogTS:856 | MyVecTS:[445, 388, 410, 370, 403, 327, 307, 385, 406, 261] PktVecTS:[423, 388, 410, 370, 403, 290, 307, 385, 406, 261] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(4) : From 4 To 5
Node:5 -- send_write_deny_lock(4) called
Node:5 Sent -- MSG_DENY_WRITE_LOCK(1) : From 5 To 4
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(4) : From 7 To 5 | MyLogTS:859 PktLogTS:857 | MyVecTS:[445, 388, 410, 370, 403, 329, 307, 448, 406, 263] PktVecTS:[423, 388, 410, 370, 357, 290, 307, 448, 406, 263] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(4) : From 7 To 5
Node:5 -- send_write_deny_lock(7) called
Node:5 Sent -- MSG_DENY_WRITE_LOCK(1) : From 5 To 7
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(4) : From 8 To 5 | MyLogTS:861 PktLogTS:857 | MyVecTS:[445, 388, 410, 370, 403, 331, 307, 448, 469, 265] PktVecTS:[423, 388, 410, 370, 357, 290, 307, 389, 469, 265] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(4) : From 8 To 5
Node:5 -- send_write_deny_lock(8) called
Node:5 Sent -- MSG_DENY_WRITE_LOCK(1) : From 5 To 8
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:863 PktLogTS:854 | MyVecTS:[445, 400, 410, 370, 403, 333, 307, 448, 469, 289] PktVecTS:[423, 400, 410, 370, 357, 290, 307, 389, 410, 289] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:864 PktLogTS:855 | MyVecTS:[445, 400, 410, 370, 403, 334, 307, 448, 469, 290] PktVecTS:[423, 400, 410, 370, 357, 290, 307, 389, 410, 290] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:868 PktLogTS:867 | MyVecTS:[445, 400, 410, 370, 403, 335, 336, 448, 469, 302] PktVecTS:[423, 400, 410, 370, 357, 290, 336, 389, 410, 302] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(0) : From 9 To 5
Node:5 -- send_write_deny_lock(9) called
Node:5 Sent -- MSG_DENY_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:871 PktLogTS:870 | MyVecTS:[445, 400, 410, 370, 403, 337, 381, 448, 469, 302] PktVecTS:[423, 400, 410, 370, 357, 290, 381, 389, 410, 301] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:872 PktLogTS:871 | MyVecTS:[445, 400, 410, 370, 403, 338, 382, 448, 469, 302] PktVecTS:[423, 400, 410, 370, 357, 290, 382, 389, 410, 301] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:875 PktLogTS:874 | MyVecTS:[445, 422, 410, 370, 403, 339, 382, 448, 469, 302] PktVecTS:[423, 422, 410, 370, 357, 290, 381, 389, 410, 301] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(4) : From 2 To 5 | MyLogTS:879 PktLogTS:878 | MyVecTS:[445, 422, 463, 370, 403, 340, 382, 448, 469, 310] PktVecTS:[423, 422, 463, 370, 357, 290, 382, 389, 410, 310] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(4) : From 2 To 5
Node:5 -- send_write_deny_lock(2) called
Node:5 Sent -- MSG_DENY_WRITE_LOCK(1) : From 5 To 2
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:883 PktLogTS:882 | MyVecTS:[445, 422, 463, 408, 403, 342, 382, 448, 469, 316] PktVecTS:[423, 422, 413, 408, 357, 290, 382, 389, 410, 316] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:884 PktLogTS:882 | MyVecTS:[445, 422, 463, 408, 403, 343, 382, 448, 469, 316] PktVecTS:[423, 422, 413, 408, 357, 290, 382, 389, 410, 316] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:888 PktLogTS:887 | MyVecTS:[445, 430, 463, 408, 403, 344, 390, 448, 469, 316] PktVecTS:[423, 430, 413, 408, 357, 290, 390, 389, 410, 316] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:890 PktLogTS:889 | MyVecTS:[445, 431, 463, 412, 403, 345, 390, 448, 469, 316] PktVecTS:[423, 431, 413, 412, 357, 290, 390, 389, 410, 316] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:892 PktLogTS:891 | MyVecTS:[445, 435, 463, 412, 403, 346, 390, 448, 469, 316] PktVecTS:[423, 435, 413, 412, 357, 290, 390, 389, 410, 316] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:896 PktLogTS:895 | MyVecTS:[445, 435, 463, 417, 403, 347, 395, 448, 469, 316] PktVecTS:[423, 435, 413, 417, 357, 290, 395, 389, 410, 316] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:897 PktLogTS:896 | MyVecTS:[445, 435, 463, 417, 403, 348, 395, 448, 469, 316] PktVecTS:[423, 435, 413, 416, 357, 290, 395, 389, 410, 316] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:899 PktLogTS:898 | MyVecTS:[445, 435, 463, 419, 403, 349, 395, 448, 469, 316] PktVecTS:[423, 435, 413, 419, 357, 290, 395, 389, 410, 316] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_DENY_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:1064 PktLogTS:1063 | MyVecTS:[445, 472, 463, 574, 403, 350, 417, 448, 469, 316] PktVecTS:[423, 472, 413, 574, 357, 294, 417, 389, 410, 316] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_WRITE_LOCK(1) : From 3 To 5
Node:5 -- C4 - WLF should be true, next operation false, rcv deny write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C4 - WLF should be false, rcv deny write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:1065 PktLogTS:1062 | MyVecTS:[644, 472, 463, 574, 403, 351, 417, 448, 469, 316] PktVecTS:[644, 472, 413, 432, 357, 326, 417, 389, 410, 316] 
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:1067 PktLogTS:1066 | MyVecTS:[644, 473, 463, 574, 403, 352, 417, 448, 469, 501] PktVecTS:[644, 473, 413, 433, 403, 336, 417, 448, 469, 501] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(4) : From 4 To 5 | MyLogTS:1073 PktLogTS:1072 | MyVecTS:[649, 473, 463, 574, 597, 353, 417, 637, 658, 501] PktVecTS:[649, 473, 463, 574, 597, 351, 417, 637, 658, 501] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(4) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[4, 5] P-Set Size:2
Node:5 -- [Write] -- Q-Set:[4] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:4.0, [N/2]:2.0
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 Sent -- MSG_RELEASE_WRITE_LOCK(1) : From 5 To 4
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(4) : From 4 To 5 | MyLogTS:1078 PktLogTS:1077 | MyVecTS:[649, 473, 463, 574, 600, 355, 417, 637, 658, 501] PktVecTS:[649, 473, 463, 574, 600, 354, 417, 637, 658, 501] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(4) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[4, 5] P-Set Size:2
Node:5 -- [Write] -- Q-Set:[4] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:4.0, [N/2]:2.0
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 Sent -- MSG_RELEASE_WRITE_LOCK(1) : From 5 To 4
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:1080 PktLogTS:899 | MyVecTS:[649, 473, 463, 574, 600, 357, 417, 637, 658, 501] PktVecTS:[423, 435, 413, 419, 357, 290, 398, 389, 410, 316] 
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(4) : From 4 To 5 | MyLogTS:1083 PktLogTS:1082 | MyVecTS:[649, 473, 463, 574, 603, 358, 417, 637, 658, 501] PktVecTS:[649, 473, 463, 574, 603, 357, 417, 637, 658, 501] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(4) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[4, 5] P-Set Size:2
Node:5 -- [Write] -- Q-Set:[4] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:4.0, [N/2]:2.0
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 Sent -- MSG_RELEASE_WRITE_LOCK(1) : From 5 To 4
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:1085 PktLogTS:1082 | MyVecTS:[656, 473, 633, 574, 603, 360, 417, 640, 661, 509] PktVecTS:[656, 473, 633, 574, 600, 357, 417, 640, 661, 509] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- grant_write_lock(0) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(1) : From 5 To 0
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:1087 PktLogTS:1081 | MyVecTS:[656, 473, 633, 574, 603, 362, 417, 640, 661, 512] PktVecTS:[652, 473, 633, 574, 597, 354, 417, 640, 661, 512] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(0) : From 9 To 5
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- send_write_deny_lock(9) called
Node:5 Sent -- MSG_DENY_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:1090 PktLogTS:1089 | MyVecTS:[657, 473, 639, 574, 603, 364, 417, 640, 661, 515] PktVecTS:[657, 473, 639, 574, 603, 363, 417, 640, 661, 515] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_RELEASE_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:1093 PktLogTS:1092 | MyVecTS:[663, 473, 639, 574, 603, 365, 417, 646, 667, 515] PktVecTS:[663, 473, 639, 574, 603, 363, 417, 646, 667, 515] 
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_WRITE_LOCK(4) : From 0 To 5
Node:5 -- C5 - WLF should be true, next operation false, rcv release write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C5 - WLF should be false, rcv release write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:1097 PktLogTS:1096 | MyVecTS:[667, 473, 639, 574, 603, 366, 417, 646, 667, 515] PktVecTS:[667, 473, 639, 574, 603, 365, 417, 646, 667, 515] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(4) : From 2 To 5 | MyLogTS:1098 PktLogTS:1095 | MyVecTS:[667, 473, 643, 574, 603, 367, 417, 646, 667, 515] PktVecTS:[663, 473, 643, 574, 603, 365, 417, 646, 667, 515] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(4) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[0, 2, 5] P-Set Size:3
Node:5 -- [Write] -- Q-Set:[2] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:4.0, [N/2]:2.0
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 Sent -- MSG_RELEASE_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_RELEASE_WRITE_LOCK(1) : From 5 To 2
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5 | MyLogTS:1103 PktLogTS:1102 | MyVecTS:[667, 473, 643, 574, 607, 370, 417, 649, 670, 522] PktVecTS:[665, 473, 639, 574, 607, 365, 417, 649, 670, 522] 
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(0) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:1104 PktLogTS:1103 | MyVecTS:[669, 473, 643, 574, 607, 371, 417, 649, 670, 522] PktVecTS:[669, 473, 643, 574, 607, 368, 417, 649, 670, 522] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- exponential_backoff() called
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:1106 PktLogTS:1105 | MyVecTS:[671, 473, 643, 574, 607, 372, 417, 649, 670, 522] PktVecTS:[671, 473, 643, 574, 607, 371, 417, 649, 670, 522] 
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[5] P-Set Size:1
Node:5 -- [Write] -- Q-Set:[5] Q-Set Size:1
Node:5 -- [Write] -- QSize:1.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Didnt get quorum
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:1127 PktLogTS:1126 | MyVecTS:[673, 473, 650, 574, 611, 373, 417, 653, 674, 540] PktVecTS:[673, 473, 650, 574, 611, 371, 417, 653, 674, 540] 
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_write_lock() called
Node:5 -- Semaphore released by :client,  Location:[Write] Exponential Backoff
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- exponential_backoff() called
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(4) : From 0 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- grant_write_lock(0) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(1) : From 5 To 0
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Request NOT yet fulfilled
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Received - MSG_SEND_UPDATED_FILE(4) : From 0 To 5 | MyLogTS:1140 PktLogTS:1139 | MyVecTS:[683, 473, 656, 574, 621, 375, 417, 661, 682, 540] PktVecTS:[683, 473, 656, 574, 621, 374, 417, 661, 682, 540] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Received & Started Processing - MSG_SEND_UPDATED_FILE(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:1144 PktLogTS:1143 | MyVecTS:[687, 473, 656, 574, 621, 376, 417, 661, 682, 540] PktVecTS:[687, 473, 656, 574, 621, 374, 417, 661, 682, 540] 
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- Semaphore released by :client,  Location:[Write] Unable to lock own copy
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_WRITE_LOCK(4) : From 0 To 5
Node:5 -- C5 - WLF should be true, next operation false, rcv release write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C5 - WLF should be false, rcv release write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Write] Starting Write operation
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- [Write] -- Operation started
Node:5 -- C1 - WLF should be false, next operation true, write operation starting (Client call) -- WriteLockFlag: false
Node:5 -- C1 - WLF should be true, write operation starting  (Client call) -- WriteLockFlag: true
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 2
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(4) : From 0 To 5 | MyLogTS:1148 PktLogTS:1147 | MyVecTS:[691, 473, 656, 574, 621, 377, 417, 661, 682, 540] PktVecTS:[691, 473, 656, 574, 621, 376, 417, 661, 682, 540] 
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_WRITE_LOCK(1) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Write] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(4) : From 2 To 5 | MyLogTS:1149 PktLogTS:1146 | MyVecTS:[691, 473, 659, 574, 621, 378, 417, 661, 682, 540] PktVecTS:[691, 473, 659, 574, 621, 377, 417, 661, 682, 540] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(4) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(4) : From 4 To 5 | MyLogTS:1151 PktLogTS:1150 | MyVecTS:[691, 473, 659, 574, 625, 379, 417, 661, 682, 540] PktVecTS:[691, 473, 656, 574, 625, 377, 417, 661, 682, 540] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(4) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(4) : From 7 To 5 | MyLogTS:1152 PktLogTS:1150 | MyVecTS:[691, 473, 659, 574, 625, 380, 417, 665, 682, 540] PktVecTS:[691, 473, 656, 574, 621, 377, 417, 665, 682, 540] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(4) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(4) : From 8 To 5 | MyLogTS:1153 PktLogTS:1150 | MyVecTS:[691, 473, 659, 574, 625, 381, 417, 665, 686, 540] PktVecTS:[691, 473, 656, 574, 621, 377, 417, 661, 686, 540] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(4) : From 8 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Write] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Write] Timer Off
Node:5 -- [Write] -- P-Set:[0, 2, 4, 5, 7, 8] P-Set Size:6
Node:5 -- [Write] -- Q-Set:[0, 4, 5, 7, 8] Q-Set Size:5
Node:5 -- [Write] -- QSize:5.0, N:5.0, [N/2]:2.5
Node:5 -- [Write] -- Got Quorum - TEST1 - GT
Node:5 -- [Write] -- quorum_write_operations() called
Node:5 -- [Write] -- Max version number:6 | My version number:6
Node:5 -- cs_write_enter() called
Node:5 - Lock file created!
Node:5 -- started writing #1153#[691, 473, 659, 574, 625, 381, 417, 665, 686, 540]
Node:5 -- finished writing#1153#[691, 473, 659, 574, 625, 381, 417, 665, 686, 540]
Node:5 - Lock file deleted!
Node:5 -- reset_version_number_hashmap() called
Node:5 -- [Write] -- Request fulfilled
Node:5 Sent -- MSG_SEND_UPDATED_FILE(1) : From 5 To 0
Node:5 Sent -- MSG_SEND_UPDATED_FILE(1) : From 5 To 2
Node:5 Sent -- MSG_SEND_UPDATED_FILE(1) : From 5 To 4
Node:5 Sent -- MSG_SEND_UPDATED_FILE(1) : From 5 To 7
Node:5 Sent -- MSG_SEND_UPDATED_FILE(1) : From 5 To 8
Node:5 -- release_write_lock() called
Node:5 Sent -- MSG_RELEASE_WRITE_LOCK(1) : From 5 To 0
Node:5 Sent -- MSG_RELEASE_WRITE_LOCK(1) : From 5 To 2
Node:5 Sent -- MSG_RELEASE_WRITE_LOCK(1) : From 5 To 4
Node:5 Sent -- MSG_RELEASE_WRITE_LOCK(1) : From 5 To 7
Node:5 Sent -- MSG_RELEASE_WRITE_LOCK(1) : From 5 To 8
Node:5 -- Received - MSG_REQUEST_READ_LOCK(1) : From 9 To 5 | MyLogTS:1164 PktLogTS:1128 | MyVecTS:[691, 473, 659, 574, 625, 392, 417, 665, 686, 543] PktVecTS:[673, 473, 650, 574, 611, 372, 417, 653, 674, 543] 
Node:5 -- C3 - WLF should be true, next operation false, request fulfilled, (Client call) -- WriteLockFlag: true
Node:5 -- C3 - WLF should be false, request fulfilled, (Client call) -- WriteLockFlag: false
Request Number:1 Fulfilled
Node:5 -- Semaphore released by :client,  Location:[Write] Request fulfilled
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(1) : From 9 To 5
Node:5 -- grant_read_lock(9) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(1) : From 5 To 9
Request Number:2
Node:5 -- [Even] -- Read Operation
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- [Read] -- Operation started
Node:5 Sent -- MSG_REQUEST_READ_LOCK(2) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_READ_LOCK(2) : From 5 To 1
Node:5 -- Received - MSG_GRANTED_READ_LOCK(4) : From 0 To 5 | MyLogTS:1168 PktLogTS:1167 | MyVecTS:[696, 473, 659, 574, 625, 394, 417, 665, 686, 543] PktVecTS:[696, 473, 659, 574, 625, 393, 417, 665, 686, 543] 
Node:5 Sent -- MSG_REQUEST_READ_LOCK(2) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_READ_LOCK(2) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_READ_LOCK(2) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_READ_LOCK(2) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_READ_LOCK(2) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_READ_LOCK(2) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_READ_LOCK(2) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Read] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(4) : From 2 To 5 | MyLogTS:1171 PktLogTS:1170 | MyVecTS:[696, 473, 664, 574, 625, 395, 417, 665, 686, 543] PktVecTS:[696, 473, 664, 574, 625, 394, 417, 665, 686, 543] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(4) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(4) : From 4 To 5 | MyLogTS:1172 PktLogTS:1170 | MyVecTS:[696, 473, 664, 574, 630, 396, 417, 665, 686, 543] PktVecTS:[696, 473, 659, 574, 630, 394, 417, 665, 686, 543] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(4) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(4) : From 7 To 5 | MyLogTS:1173 PktLogTS:1170 | MyVecTS:[696, 473, 664, 574, 630, 397, 417, 671, 686, 543] PktVecTS:[696, 473, 659, 574, 625, 394, 417, 671, 686, 543] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(4) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(4) : From 8 To 5 | MyLogTS:1174 PktLogTS:1170 | MyVecTS:[696, 473, 664, 574, 630, 398, 417, 671, 692, 543] PktVecTS:[696, 473, 659, 574, 625, 394, 417, 665, 692, 543] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(4) : From 8 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(1) : From 9 To 5 | MyLogTS:1175 PktLogTS:1170 | MyVecTS:[696, 473, 664, 574, 630, 399, 417, 671, 692, 549] PktVecTS:[696, 473, 659, 574, 625, 394, 417, 669, 690, 549] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(1) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:1176 PktLogTS:900 | MyVecTS:[696, 473, 664, 574, 630, 400, 417, 671, 692, 549] PktVecTS:[423, 435, 413, 420, 357, 290, 397, 389, 410, 316] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(1) : From 9 To 5 | MyLogTS:1177 PktLogTS:1173 | MyVecTS:[698, 473, 664, 574, 630, 401, 417, 671, 692, 550] PktVecTS:[698, 473, 659, 574, 625, 394, 417, 669, 690, 550] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(1) : From 9 To 5
Node:5 -- grant_read_lock(9) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(2) : From 5 To 9
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Read] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Read] Timer Off
Node:5 -- [Read] -- P-Set:[0, 1, 2, 4, 5, 7, 8, 9] P-Set Size:8
Node:5 -- [Read] -- Q-Set:[0, 2, 4, 5, 7, 8] Q-Set Size:6
Node:5 -- [Read] -- QSize:6.0, N:6.0, [N/2]:3.0
Node:5 -- [Read] -- Got Quorum - TEST1 - GT
Node:5 -- [Read] -- quorum_read_operations() called
Node:5 -- cs_read_enter() called
Node:5 - Lock file created!
Node:5 -- started reading #1178#[698, 473, 664, 574, 630, 402, 417, 671, 692, 550]
Node:5 -- finished reading#1178#[698, 473, 664, 574, 630, 402, 417, 671, 692, 550]
Node:5 - Lock file deleted!
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_read_lock() called
Node:5 Sent -- MSG_RELEASE_READ_LOCK(2) : From 5 To 0
Node:5 Sent -- MSG_RELEASE_READ_LOCK(2) : From 5 To 1
Node:5 Sent -- MSG_RELEASE_READ_LOCK(2) : From 5 To 2
Node:5 Sent -- MSG_RELEASE_READ_LOCK(2) : From 5 To 4
Node:5 Sent -- MSG_RELEASE_READ_LOCK(2) : From 5 To 7
Node:5 Sent -- MSG_RELEASE_READ_LOCK(2) : From 5 To 8
Node:5 Sent -- MSG_RELEASE_READ_LOCK(2) : From 5 To 9
Node:5 -- [Read] -- Request fulfilled
Node:5 -- release_read_lock() called
Request Number:2 Fulfilled
Node:5 -- Semaphore released by :client,  Location:[Read] Request fulfilled
Request Number:3
Node:5 -- [Odd] -- Read Operation
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- [Read] -- Operation started
Node:5 Sent -- MSG_REQUEST_READ_LOCK(3) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_READ_LOCK(3) : From 5 To 1
Node:5 Sent -- MSG_REQUEST_READ_LOCK(3) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_READ_LOCK(3) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_READ_LOCK(3) : From 5 To 4
Node:5 -- Received - MSG_GRANTED_READ_LOCK(4) : From 0 To 5 | MyLogTS:1188 PktLogTS:1187 | MyVecTS:[701, 473, 664, 574, 630, 410, 417, 671, 692, 550] PktVecTS:[701, 473, 664, 574, 630, 409, 417, 671, 692, 550] 
Node:5 Sent -- MSG_REQUEST_READ_LOCK(3) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_READ_LOCK(3) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_READ_LOCK(3) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_READ_LOCK(3) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Read] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(4) : From 7 To 5 | MyLogTS:1191 PktLogTS:1190 | MyVecTS:[701, 473, 664, 574, 630, 411, 417, 676, 692, 550] PktVecTS:[701, 473, 664, 574, 630, 410, 417, 676, 692, 550] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(4) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(4) : From 8 To 5 | MyLogTS:1192 PktLogTS:1190 | MyVecTS:[701, 473, 664, 574, 630, 412, 417, 676, 697, 550] PktVecTS:[701, 473, 664, 574, 630, 410, 417, 671, 697, 550] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(4) : From 8 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(4) : From 2 To 5 | MyLogTS:1193 PktLogTS:1187 | MyVecTS:[701, 473, 669, 574, 630, 413, 417, 676, 697, 550] PktVecTS:[698, 473, 669, 574, 630, 409, 417, 671, 692, 550] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(4) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(4) : From 4 To 5 | MyLogTS:1194 PktLogTS:1187 | MyVecTS:[701, 473, 669, 574, 635, 414, 417, 676, 697, 550] PktVecTS:[701, 473, 664, 574, 635, 410, 417, 671, 692, 550] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(4) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:1195 PktLogTS:908 | MyVecTS:[701, 473, 669, 574, 635, 415, 417, 676, 697, 550] PktVecTS:[423, 438, 413, 424, 357, 290, 405, 389, 410, 316] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Read] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Read] Timer Off
Node:5 -- [Read] -- P-Set:[0, 2, 4, 5, 7, 8] P-Set Size:6
Node:5 -- [Read] -- Q-Set:[0, 2, 4, 5, 7, 8] Q-Set Size:6
Node:5 -- Received - MSG_REQUEST_LATEST_FILE_READ(1) : From 9 To 5 | MyLogTS:1196 PktLogTS:1177 | MyVecTS:[701, 473, 669, 574, 635, 416, 417, 676, 697, 554] PktVecTS:[698, 473, 666, 574, 632, 394, 417, 669, 690, 554] 
Node:5 -- [Read] -- QSize:6.0, N:6.0, [N/2]:3.0
Node:5 -- [Read] -- Got Quorum - TEST1 - GT
Node:5 -- [Read] -- quorum_read_operations() called
Node:5 -- cs_read_enter() called
Node:5 - Lock file created!
Node:5 -- started reading #1196#[701, 473, 669, 574, 635, 416, 417, 676, 697, 554]
Node:5 -- finished reading#1196#[701, 473, 669, 574, 635, 416, 417, 676, 697, 554]
Node:5 - Lock file deleted!
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_read_lock() called
Node:5 Sent -- MSG_RELEASE_READ_LOCK(3) : From 5 To 0
Node:5 Sent -- MSG_RELEASE_READ_LOCK(3) : From 5 To 2
Node:5 Sent -- MSG_RELEASE_READ_LOCK(3) : From 5 To 4
Node:5 Sent -- MSG_RELEASE_READ_LOCK(3) : From 5 To 7
Node:5 Sent -- MSG_RELEASE_READ_LOCK(3) : From 5 To 8
Node:5 -- [Read] -- Request fulfilled
Node:5 -- release_read_lock() called
Request Number:3 Fulfilled
Node:5 -- Semaphore released by :client,  Location:[Read] Request fulfilled
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_LATEST_FILE_READ(1) : From 9 To 5
Node:5 -- send_read_response_latest_file(9) called
Node:5 Sent -- MSG_RESPONSE_LATEST_FILE_READ(3) : From 5 To 9
Request Number:4
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Even] -- Read Operation
Node:5 -- Semaphore locked by :client, Location:[Read] Starting Read operation
Node:5 -- [Read] -- Operation started
Node:5 Sent -- MSG_REQUEST_READ_LOCK(4) : From 5 To 0
Node:5 Sent -- MSG_REQUEST_READ_LOCK(4) : From 5 To 1
Node:5 -- Received - MSG_GRANTED_READ_LOCK(4) : From 0 To 5 | MyLogTS:1205 PktLogTS:1204 | MyVecTS:[704, 473, 669, 574, 635, 423, 417, 676, 697, 554] PktVecTS:[704, 473, 669, 574, 635, 422, 417, 676, 697, 554] 
Node:5 Sent -- MSG_REQUEST_READ_LOCK(4) : From 5 To 2
Node:5 Sent -- MSG_REQUEST_READ_LOCK(4) : From 5 To 3
Node:5 Sent -- MSG_REQUEST_READ_LOCK(4) : From 5 To 4
Node:5 Sent -- MSG_REQUEST_READ_LOCK(4) : From 5 To 6
Node:5 Sent -- MSG_REQUEST_READ_LOCK(4) : From 5 To 7
Node:5 Sent -- MSG_REQUEST_READ_LOCK(4) : From 5 To 8
Node:5 Sent -- MSG_REQUEST_READ_LOCK(4) : From 5 To 9
Node:5 -- Semaphore released by :client,  Location:[Read] Timer On
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(4) : From 0 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(4) : From 2 To 5 | MyLogTS:1208 PktLogTS:1207 | MyVecTS:[704, 473, 673, 574, 635, 424, 417, 676, 697, 554] PktVecTS:[704, 473, 673, 574, 635, 423, 417, 676, 697, 554] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(4) : From 2 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(4) : From 4 To 5 | MyLogTS:1209 PktLogTS:1207 | MyVecTS:[704, 473, 673, 574, 639, 425, 417, 676, 697, 555] PktVecTS:[704, 473, 669, 574, 639, 423, 417, 676, 697, 555] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(4) : From 4 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(4) : From 7 To 5 | MyLogTS:1210 PktLogTS:1207 | MyVecTS:[704, 473, 673, 574, 639, 426, 417, 680, 697, 557] PktVecTS:[704, 473, 669, 574, 635, 423, 417, 680, 697, 557] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(4) : From 7 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(4) : From 8 To 5 | MyLogTS:1211 PktLogTS:1207 | MyVecTS:[704, 473, 673, 574, 639, 427, 417, 680, 701, 559] PktVecTS:[704, 473, 669, 574, 635, 423, 417, 676, 701, 559] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(4) : From 8 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_DENY_READ_LOCK(1) : From 9 To 5 | MyLogTS:1212 PktLogTS:1184 | MyVecTS:[704, 473, 673, 574, 639, 428, 417, 680, 701, 561] PktVecTS:[698, 473, 666, 574, 632, 402, 417, 673, 694, 561] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_READ_LOCK(1) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- [Read] -- Timer over
Node:5 -- Semaphore locked by :client, Location:[Read] Timer Off
Node:5 -- [Read] -- P-Set:[0, 2, 4, 5, 7, 8] P-Set Size:6
Node:5 -- [Read] -- Q-Set:[0, 2, 4, 5, 7, 8] Q-Set Size:6
Node:5 -- [Read] -- QSize:6.0, N:6.0, [N/2]:3.0
Node:5 -- [Read] -- Got Quorum - TEST1 - GT
Node:5 -- [Read] -- quorum_read_operations() called
Node:5 -- cs_read_enter() called
Node:5 - Lock file created!
Node:5 -- started reading #1212#[704, 473, 673, 574, 639, 428, 417, 680, 701, 561]
Node:5 -- finished reading#1212#[704, 473, 673, 574, 639, 428, 417, 680, 701, 561]
Node:5 - Lock file deleted!
Node:5 -- reset_version_number_hashmap() called
Node:5 -- release_read_lock() called
Node:5 Sent -- MSG_RELEASE_READ_LOCK(4) : From 5 To 0
Node:5 Sent -- MSG_RELEASE_READ_LOCK(4) : From 5 To 2
Node:5 Sent -- MSG_RELEASE_READ_LOCK(4) : From 5 To 4
Node:5 Sent -- MSG_RELEASE_READ_LOCK(4) : From 5 To 7
Node:5 Sent -- MSG_RELEASE_READ_LOCK(4) : From 5 To 8
Node:5 -- [Read] -- Request fulfilled
Node:5 -- release_read_lock() called
Request Number:4 Fulfilled
Node:5 -- Semaphore released by :client,  Location:[Read] Request fulfilled
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:1218 PktLogTS:935 | MyVecTS:[704, 473, 673, 574, 639, 434, 417, 680, 701, 561] PktVecTS:[423, 473, 413, 432, 357, 290, 417, 389, 410, 316] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- grant_write_lock(1) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(4) : From 5 To 1
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(1) : From 9 To 5 | MyLogTS:1220 PktLogTS:1190 | MyVecTS:[704, 473, 673, 574, 639, 436, 417, 680, 701, 564] PktVecTS:[701, 473, 666, 574, 632, 410, 417, 673, 694, 564] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(1) : From 9 To 5
Node:5 -- send_read_deny_lock(9) called
Node:5 Sent -- MSG_DENY_READ_LOCK(4) : From 5 To 9
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_READ_LOCK(1) : From 9 To 5 | MyLogTS:1222 PktLogTS:1208 | MyVecTS:[704, 473, 673, 574, 639, 438, 417, 680, 701, 568] PktVecTS:[704, 473, 669, 574, 635, 423, 417, 676, 697, 568] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(1) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_DENY_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:1223 PktLogTS:1221 | MyVecTS:[704, 621, 673, 574, 639, 439, 417, 680, 701, 568] PktVecTS:[704, 621, 673, 574, 639, 435, 417, 680, 701, 561] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_WRITE_LOCK(1) : From 1 To 5
Node:5 -- C4 - WLF should be true, next operation false, rcv deny write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C4 - WLF should be false, rcv deny write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_READ_LOCK(1) : From 9 To 5 | MyLogTS:1224 PktLogTS:1211 | MyVecTS:[704, 621, 673, 574, 639, 440, 417, 680, 701, 571] PktVecTS:[704, 473, 669, 574, 635, 423, 417, 676, 697, 571] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_READ_LOCK(1) : From 9 To 5
Node:5 -- send_read_deny_lock(9) called
Node:5 Sent -- MSG_DENY_READ_LOCK(4) : From 5 To 9
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:1226 PktLogTS:940 | MyVecTS:[704, 621, 673, 574, 639, 442, 417, 680, 701, 571] PktVecTS:[423, 477, 413, 432, 357, 290, 417, 389, 410, 316] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(1) : From 1 To 5
Node:5 -- send_write_deny_lock(1) called
Node:5 Sent -- MSG_DENY_WRITE_LOCK(4) : From 5 To 1
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:1228 PktLogTS:915 | MyVecTS:[704, 621, 673, 574, 639, 444, 417, 680, 701, 571] PktVecTS:[423, 446, 413, 429, 357, 290, 405, 389, 410, 316] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- grant_write_lock(3) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(4) : From 5 To 3
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:1230 PktLogTS:1228 | MyVecTS:[704, 622, 673, 574, 639, 446, 417, 680, 701, 571] PktVecTS:[704, 622, 673, 574, 639, 443, 417, 680, 701, 571] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_DENY_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:1232 PktLogTS:1231 | MyVecTS:[704, 622, 673, 597, 639, 447, 417, 680, 701, 571] PktVecTS:[704, 622, 673, 597, 639, 445, 417, 680, 701, 571] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_WRITE_LOCK(1) : From 3 To 5
Node:5 -- C4 - WLF should be true, next operation false, rcv deny write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C4 - WLF should be false, rcv deny write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:1233 PktLogTS:918 | MyVecTS:[704, 622, 673, 597, 639, 448, 417, 680, 701, 571] PktVecTS:[423, 446, 413, 432, 357, 290, 405, 389, 410, 316] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- grant_write_lock(3) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(4) : From 5 To 3
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_DENY_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:1237 PktLogTS:1236 | MyVecTS:[704, 622, 673, 599, 639, 450, 417, 680, 701, 571] PktVecTS:[704, 622, 673, 599, 639, 449, 417, 680, 701, 571] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_WRITE_LOCK(1) : From 3 To 5
Node:5 -- C4 - WLF should be true, next operation false, rcv deny write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C4 - WLF should be false, rcv deny write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 9 To 5 | MyLogTS:1238 PktLogTS:1226 | MyVecTS:[704, 622, 673, 599, 639, 451, 417, 680, 701, 573] PktVecTS:[704, 621, 673, 574, 639, 441, 417, 680, 701, 573] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 9 To 5
Node:5 -- grant_read_lock(9) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(4) : From 5 To 9
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 1 To 5 | MyLogTS:1254 PktLogTS:1253 | MyVecTS:[715, 641, 676, 599, 642, 453, 417, 684, 705, 573] PktVecTS:[715, 641, 676, 574, 642, 443, 417, 684, 705, 573] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 1 To 5
Node:5 -- grant_read_lock(1) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(4) : From 5 To 1
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_DENY_READ_LOCK(2) : From 9 To 5 | MyLogTS:1256 PktLogTS:1241 | MyVecTS:[715, 641, 676, 599, 642, 455, 417, 684, 705, 576] PktVecTS:[708, 623, 673, 599, 639, 452, 417, 680, 701, 576] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_READ_LOCK(2) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 9 To 5 | MyLogTS:1257 PktLogTS:1254 | MyVecTS:[715, 641, 676, 599, 642, 456, 417, 684, 705, 577] PktVecTS:[715, 641, 676, 599, 642, 452, 417, 684, 705, 577] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 9 To 5
Node:5 -- grant_read_lock(9) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(4) : From 5 To 9
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:1259 PktLogTS:921 | MyVecTS:[715, 641, 676, 599, 642, 458, 417, 684, 705, 577] PktVecTS:[423, 446, 413, 435, 357, 290, 405, 389, 410, 316] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(1) : From 3 To 5
Node:5 -- send_write_deny_lock(3) called
Node:5 Sent -- MSG_DENY_WRITE_LOCK(4) : From 5 To 3
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:1262 PktLogTS:1261 | MyVecTS:[715, 641, 676, 603, 642, 460, 417, 684, 705, 577] PktVecTS:[715, 641, 676, 603, 642, 459, 417, 684, 705, 577] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:1263 PktLogTS:1261 | MyVecTS:[715, 641, 676, 603, 642, 461, 417, 684, 705, 577] PktVecTS:[715, 641, 676, 603, 642, 459, 417, 684, 705, 577] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5 | MyLogTS:1264 PktLogTS:906 | MyVecTS:[715, 641, 676, 603, 642, 462, 417, 684, 705, 577] PktVecTS:[423, 446, 413, 420, 357, 290, 401, 389, 410, 316] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 1 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:1265 PktLogTS:1261 | MyVecTS:[715, 641, 676, 603, 642, 463, 417, 684, 705, 577] PktVecTS:[715, 641, 676, 603, 642, 459, 417, 684, 705, 577] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:1266 PktLogTS:909 | MyVecTS:[715, 641, 676, 603, 642, 464, 417, 684, 705, 577] PktVecTS:[423, 438, 413, 423, 357, 290, 406, 389, 410, 316] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_READ_LOCK(2) : From 1 To 5 | MyLogTS:1267 PktLogTS:1266 | MyVecTS:[715, 653, 681, 603, 647, 465, 417, 689, 710, 578] PktVecTS:[715, 653, 681, 599, 647, 454, 417, 689, 710, 578] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(2) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 1 To 5 | MyLogTS:1271 PktLogTS:1270 | MyVecTS:[715, 657, 681, 603, 647, 466, 417, 689, 710, 578] PktVecTS:[715, 657, 681, 603, 647, 459, 417, 689, 710, 578] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 1 To 5
Node:5 -- grant_read_lock(1) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(4) : From 5 To 1
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 9 To 5 | MyLogTS:1273 PktLogTS:1263 | MyVecTS:[717, 657, 683, 603, 649, 468, 417, 689, 710, 585] PktVecTS:[717, 648, 683, 599, 649, 454, 417, 689, 710, 585] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 9 To 5
Node:5 -- grant_read_lock(9) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(4) : From 5 To 9
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_GRANTED_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:1275 PktLogTS:922 | MyVecTS:[717, 657, 683, 603, 649, 470, 418, 689, 710, 585] PktVecTS:[423, 448, 413, 429, 357, 290, 418, 389, 410, 316] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_GRANTED_WRITE_LOCK(2) : From 6 To 5
Node:5 -- send_write_deny_lock(6) called
Node:5 Sent -- MSG_DENY_WRITE_LOCK(4) : From 5 To 6
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:1278 PktLogTS:1277 | MyVecTS:[717, 657, 683, 603, 649, 472, 588, 689, 710, 585] PktVecTS:[717, 657, 683, 603, 649, 471, 588, 689, 710, 585] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_READ_LOCK(2) : From 9 To 5 | MyLogTS:1279 PktLogTS:1267 | MyVecTS:[717, 657, 683, 603, 649, 473, 588, 691, 710, 589] PktVecTS:[717, 648, 683, 599, 649, 457, 417, 691, 710, 589] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(2) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_DENY_READ_LOCK(3) : From 1 To 5 | MyLogTS:1280 PktLogTS:1279 | MyVecTS:[724, 666, 683, 605, 655, 474, 588, 691, 710, 589] PktVecTS:[724, 666, 683, 605, 655, 467, 417, 689, 710, 585] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_READ_LOCK(3) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:1281 PktLogTS:1277 | MyVecTS:[724, 666, 683, 605, 655, 475, 588, 691, 710, 589] PktVecTS:[717, 657, 683, 603, 649, 471, 588, 689, 710, 585] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- grant_write_lock(6) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(4) : From 5 To 6
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 9 To 5 | MyLogTS:1283 PktLogTS:1272 | MyVecTS:[724, 666, 683, 605, 655, 477, 588, 691, 712, 594] PktVecTS:[717, 648, 683, 603, 649, 459, 417, 691, 712, 594] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(4) : From 1 To 5 | MyLogTS:1288 PktLogTS:1287 | MyVecTS:[724, 674, 690, 605, 655, 478, 588, 697, 718, 594] PktVecTS:[724, 674, 690, 605, 655, 467, 417, 697, 718, 585] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(4) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:1290 PktLogTS:1289 | MyVecTS:[724, 674, 690, 605, 655, 479, 592, 697, 718, 594] PktVecTS:[724, 674, 690, 605, 655, 476, 592, 697, 718, 594] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_WRITE_LOCK(2) : From 6 To 5
Node:5 -- C5 - WLF should be true, next operation false, rcv release write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C5 - WLF should be false, rcv release write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_DENY_READ_LOCK(2) : From 9 To 5 | MyLogTS:1291 PktLogTS:1283 | MyVecTS:[726, 674, 692, 607, 658, 480, 592, 697, 718, 605] PktVecTS:[726, 657, 692, 607, 658, 469, 417, 691, 712, 605] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_DENY_READ_LOCK(2) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:1292 PktLogTS:1289 | MyVecTS:[726, 674, 692, 607, 658, 481, 592, 697, 718, 605] PktVecTS:[724, 674, 690, 605, 655, 476, 592, 697, 718, 594] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- grant_write_lock(6) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(4) : From 5 To 6
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:1296 PktLogTS:1295 | MyVecTS:[726, 674, 692, 607, 658, 483, 594, 697, 718, 605] PktVecTS:[726, 674, 692, 607, 658, 482, 594, 697, 718, 605] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_WRITE_LOCK(2) : From 6 To 5
Node:5 -- C5 - WLF should be true, next operation false, rcv release write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C5 - WLF should be false, rcv release write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:1297 PktLogTS:1295 | MyVecTS:[726, 674, 692, 607, 658, 484, 594, 697, 718, 605] PktVecTS:[726, 674, 692, 607, 658, 482, 594, 697, 718, 605] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- grant_write_lock(6) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(4) : From 5 To 6
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(4) : From 1 To 5 | MyLogTS:1299 PktLogTS:1298 | MyVecTS:[733, 685, 699, 614, 658, 486, 594, 697, 718, 605] PktVecTS:[733, 685, 699, 614, 655, 471, 588, 697, 718, 594] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(4) : From 1 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:1303 PktLogTS:1302 | MyVecTS:[733, 685, 699, 614, 658, 487, 598, 699, 732, 609] PktVecTS:[733, 685, 699, 614, 658, 485, 598, 699, 732, 609] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_WRITE_LOCK(2) : From 6 To 5
Node:5 -- C5 - WLF should be true, next operation false, rcv release write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C5 - WLF should be false, rcv release write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:1304 PktLogTS:1303 | MyVecTS:[733, 685, 699, 614, 658, 488, 599, 699, 732, 609] PktVecTS:[733, 685, 699, 614, 658, 485, 599, 699, 732, 609] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- grant_write_lock(6) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(4) : From 5 To 6
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:1310 PktLogTS:1309 | MyVecTS:[733, 685, 699, 614, 658, 490, 602, 699, 736, 609] PktVecTS:[733, 685, 699, 614, 658, 489, 602, 699, 736, 609] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_WRITE_LOCK(2) : From 6 To 5
Node:5 -- C5 - WLF should be true, next operation false, rcv release write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C5 - WLF should be false, rcv release write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:1313 PktLogTS:1312 | MyVecTS:[733, 698, 699, 614, 665, 491, 604, 707, 736, 611] PktVecTS:[733, 698, 699, 614, 665, 489, 604, 707, 736, 611] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(2) : From 6 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- grant_write_lock(6) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(4) : From 5 To 6
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:1317 PktLogTS:1316 | MyVecTS:[740, 702, 699, 623, 665, 493, 604, 707, 736, 617] PktVecTS:[740, 702, 699, 623, 665, 489, 604, 707, 736, 617] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 9 To 5 | MyLogTS:1318 PktLogTS:1314 | MyVecTS:[740, 702, 699, 623, 665, 494, 604, 707, 736, 636] PktVecTS:[736, 679, 696, 611, 663, 482, 594, 704, 725, 636] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 9 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_SEND_UPDATED_FILE(2) : From 6 To 5 | MyLogTS:1334 PktLogTS:1333 | MyVecTS:[750, 702, 708, 624, 674, 495, 619, 717, 741, 636] PktVecTS:[750, 702, 708, 624, 674, 492, 619, 717, 741, 636] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_SEND_UPDATED_FILE(2) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_WRITE_LOCK(2) : From 6 To 5 | MyLogTS:1341 PktLogTS:1340 | MyVecTS:[750, 702, 708, 624, 674, 496, 626, 717, 741, 636] PktVecTS:[750, 702, 708, 624, 674, 492, 626, 717, 741, 636] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_WRITE_LOCK(2) : From 6 To 5
Node:5 -- C5 - WLF should be true, next operation false, rcv release write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C5 - WLF should be false, rcv release write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 6 To 5 | MyLogTS:1347 PktLogTS:1346 | MyVecTS:[754, 702, 708, 624, 674, 497, 630, 717, 741, 636] PktVecTS:[754, 702, 708, 624, 674, 492, 630, 717, 741, 636] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 6 To 5
Node:5 -- grant_read_lock(6) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(4) : From 5 To 6
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_READ_LOCK(3) : From 6 To 5 | MyLogTS:1362 PktLogTS:1361 | MyVecTS:[754, 706, 716, 627, 682, 499, 643, 723, 747, 646] PktVecTS:[754, 706, 716, 627, 682, 498, 643, 723, 747, 646] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(3) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:1364 PktLogTS:1363 | MyVecTS:[757, 706, 716, 629, 682, 500, 643, 723, 747, 646] PktVecTS:[757, 706, 716, 629, 682, 498, 641, 723, 747, 646] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_WRITE_LOCK(1) : From 3 To 5
Node:5 -- check_read_grant_hashmap_set() called
Node:5 -- About to grant should be false (Server call) -- WriteLockFlag: false
Node:5 -- grant_write_lock(3) called
Node:5 -- C2 - WLF should be false, next operation true, send grant write lock (Server call) -- WriteLockFlag: false
Node:5 -- C2 - WLF should be true, send grant write lock (Server call) -- WriteLockFlag: true
Node:5 Sent -- MSG_GRANTED_WRITE_LOCK(4) : From 5 To 3
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(4) : From 6 To 5 | MyLogTS:1366 PktLogTS:1364 | MyVecTS:[757, 706, 716, 629, 682, 502, 646, 723, 747, 646] PktVecTS:[754, 706, 716, 627, 682, 498, 646, 723, 747, 646] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(4) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_SEND_UPDATED_FILE(1) : From 3 To 5 | MyLogTS:1378 PktLogTS:1377 | MyVecTS:[760, 706, 719, 640, 685, 503, 646, 723, 750, 646] PktVecTS:[760, 706, 719, 640, 685, 501, 646, 723, 750, 646] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_SEND_UPDATED_FILE(1) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_WRITE_LOCK(1) : From 3 To 5 | MyLogTS:1383 PktLogTS:1382 | MyVecTS:[760, 706, 719, 645, 685, 504, 646, 723, 750, 646] PktVecTS:[760, 706, 719, 645, 685, 501, 646, 723, 750, 646] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_WRITE_LOCK(1) : From 3 To 5
Node:5 -- C5 - WLF should be true, next operation false, rcv release write lock, (Server call) -- WriteLockFlag: true
Node:5 -- C5 - WLF should be false, rcv release write lock, (Server call) -- WriteLockFlag: false
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(2) : From 3 To 5 | MyLogTS:1384 PktLogTS:1383 | MyVecTS:[760, 706, 719, 646, 685, 505, 646, 723, 750, 646] PktVecTS:[760, 706, 719, 646, 685, 501, 646, 723, 750, 646] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(2) : From 3 To 5
Node:5 -- grant_read_lock(3) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(4) : From 5 To 3
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(4) : From 6 To 5 | MyLogTS:1386 PktLogTS:1370 | MyVecTS:[760, 721, 719, 646, 685, 507, 651, 726, 750, 646] PktVecTS:[757, 721, 716, 629, 682, 498, 651, 726, 747, 646] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(4) : From 6 To 5
Node:5 -- grant_read_lock(6) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(4) : From 5 To 6
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_READ_LOCK(2) : From 3 To 5 | MyLogTS:1398 PktLogTS:1397 | MyVecTS:[764, 723, 724, 660, 690, 509, 654, 731, 755, 649] PktVecTS:[764, 723, 724, 660, 690, 506, 654, 731, 755, 649] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(2) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(3) : From 3 To 5 | MyLogTS:1405 PktLogTS:1404 | MyVecTS:[770, 723, 724, 665, 692, 510, 660, 731, 755, 649] PktVecTS:[770, 723, 724, 665, 692, 506, 660, 731, 755, 649] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(3) : From 3 To 5
Node:5 -- grant_read_lock(3) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(4) : From 5 To 3
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(4) : From 6 To 5 | MyLogTS:1407 PktLogTS:1395 | MyVecTS:[770, 723, 724, 665, 692, 512, 662, 733, 755, 649] PktVecTS:[766, 723, 719, 648, 692, 501, 662, 733, 750, 646] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(4) : From 6 To 5
Node:5 -- grant_read_lock(6) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(4) : From 5 To 6
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_READ_LOCK(3) : From 3 To 5 | MyLogTS:1422 PktLogTS:1421 | MyVecTS:[770, 732, 729, 680, 695, 514, 668, 736, 760, 649] PktVecTS:[770, 732, 729, 680, 695, 511, 668, 736, 760, 649] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(3) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_REQUEST_READ_LOCK(4) : From 3 To 5 | MyLogTS:1425 PktLogTS:1424 | MyVecTS:[770, 732, 729, 683, 695, 515, 668, 736, 760, 649] PktVecTS:[770, 732, 729, 683, 695, 511, 668, 736, 760, 649] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_REQUEST_READ_LOCK(4) : From 3 To 5
Node:5 -- grant_read_lock(3) called
Node:5 Sent -- MSG_GRANTED_READ_LOCK(4) : From 5 To 3
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_READ_LOCK(4) : From 6 To 5 | MyLogTS:1436 PktLogTS:1435 | MyVecTS:[777, 734, 731, 684, 698, 517, 688, 738, 762, 649] PktVecTS:[777, 734, 731, 684, 698, 513, 688, 738, 762, 649] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(4) : From 6 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
Node:5 -- Received - MSG_RELEASE_READ_LOCK(4) : From 3 To 5 | MyLogTS:1442 PktLogTS:1441 | MyVecTS:[777, 737, 734, 696, 701, 518, 688, 741, 765, 649] PktVecTS:[777, 737, 734, 696, 701, 516, 686, 741, 765, 649] 
Node:5 -- Semaphore locked by :server, Location:Before message processing
Node:5 -- Received & Started Processing - MSG_RELEASE_READ_LOCK(4) : From 3 To 5
Node:5 -- Semaphore released by :server,  Location:After message processing
